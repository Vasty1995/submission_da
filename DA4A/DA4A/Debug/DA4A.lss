
DA4A.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800100  00000af0  00000b84  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000af0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800132  00800132  00000bb6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000bb6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c14  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00000c54  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008e9  00000000  00000000  00000ca4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007c9  00000000  00000000  0000158d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000391  00000000  00000000  00001d56  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a0  00000000  00000000  000020e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000429  00000000  00000000  00002188  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000d5  00000000  00000000  000025b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00002686  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 ef       	ldi	r30, 0xF0	; 240
  7c:	fa e0       	ldi	r31, 0x0A	; 10
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 33       	cpi	r26, 0x32	; 50
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e3       	ldi	r26, 0x32	; 50
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a8 33       	cpi	r26, 0x38	; 56
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 b2 00 	call	0x164	; 0x164 <main>
  9e:	0c 94 76 05 	jmp	0xaec	; 0xaec <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <USART0_sendChar>:
 * Procedure to send a single character over USART0. If character is linefeed, reset 
 * line. 
 * Assumes ASCII code. 
 */ 
{
	if(data == '\n')	// If character is linefeed,
  a6:	8a 30       	cpi	r24, 0x0A	; 10
  a8:	41 f4       	brne	.+16     	; 0xba <USART0_sendChar+0x14>
	{					// First send return.
		while(! (UCSR0A & (1<<UDRE0)) );
  aa:	e0 ec       	ldi	r30, 0xC0	; 192
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	90 81       	ld	r25, Z
  b0:	95 ff       	sbrs	r25, 5
  b2:	fd cf       	rjmp	.-6      	; 0xae <USART0_sendChar+0x8>
		UDR0 = '\r';
  b4:	9d e0       	ldi	r25, 0x0D	; 13
  b6:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	}
	while(! (UCSR0A & (1<<UDRE0)) ); // Wait for last data to be transmitted.
  ba:	e0 ec       	ldi	r30, 0xC0	; 192
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	90 81       	ld	r25, Z
  c0:	95 ff       	sbrs	r25, 5
  c2:	fd cf       	rjmp	.-6      	; 0xbe <USART0_sendChar+0x18>
	UDR0 = data;	// send data. 
  c4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
  c8:	80 e0       	ldi	r24, 0x00	; 0
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	08 95       	ret

000000ce <usart0_init>:
/*
 * Procedure to initialize USART0 asynchronous with enabled RX/TX, 8 bit data,
 * no parity, and 1 stop bit. 
*/
{
	UCSR0B = (1<<TXEN0)  | (1<<RXEN0);	// enable transmit/receive
  ce:	88 e1       	ldi	r24, 0x18	; 24
  d0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (1<<UCSZ01) | (1<<UCSZ00);	// asynchronous, 8N1
  d4:	86 e0       	ldi	r24, 0x06	; 6
  d6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UBRR0L = ASYNCH_NORM_PRESCALER;		// Set prescaler based on desired baudrate
  da:	83 e3       	ldi	r24, 0x33	; 51
  dc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  e0:	08 95       	ret

000000e2 <updateDC_OC1A>:
void updateDC_OC1A(unsigned char DC)
// Procedure to update PWM duty cycle on OC1A. Given an unsigned character DC, this
// procedure will calculate the appropriate OCR1A value based on the top value of
// Timer1. 
{
	OCR1A = (unsigned short)(DC * 2499.0 / 100);
  e2:	68 2f       	mov	r22, r24
  e4:	70 e0       	ldi	r23, 0x00	; 0
  e6:	80 e0       	ldi	r24, 0x00	; 0
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	0e 94 9f 01 	call	0x33e	; 0x33e <__floatsisf>
  ee:	20 e0       	ldi	r18, 0x00	; 0
  f0:	30 e3       	ldi	r19, 0x30	; 48
  f2:	4c e1       	ldi	r20, 0x1C	; 28
  f4:	55 e4       	ldi	r21, 0x45	; 69
  f6:	0e 94 2b 02 	call	0x456	; 0x456 <__mulsf3>
  fa:	20 e0       	ldi	r18, 0x00	; 0
  fc:	30 e0       	ldi	r19, 0x00	; 0
  fe:	48 ec       	ldi	r20, 0xC8	; 200
 100:	52 e4       	ldi	r21, 0x42	; 66
 102:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <__divsf3>
 106:	0e 94 6e 01 	call	0x2dc	; 0x2dc <__fixunssfsi>
 10a:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 10e:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 112:	08 95       	ret

00000114 <readADC>:


unsigned short readADC()
// readADC will read the adcValue after it has been calculated. 
{		
	ADCSRA |= (1<<ADSC);				// Begin conversion
 114:	ea e7       	ldi	r30, 0x7A	; 122
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	80 81       	ld	r24, Z
 11a:	80 64       	ori	r24, 0x40	; 64
 11c:	80 83       	st	Z, r24
	while((ADCSRA & (1<<ADIF)) == 0 );	// Wait for conversion to finish.
 11e:	80 81       	ld	r24, Z
 120:	84 ff       	sbrs	r24, 4
 122:	fd cf       	rjmp	.-6      	; 0x11e <readADC+0xa>
	return ADC;
 124:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 128:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
}
 12c:	08 95       	ret

0000012e <PWM_OC1A_init>:

void PWM_OC1A_init()
{
	//Set PORTB1 pin as output
	DDRB |= (1<<DDB1);	// make OC1A as output. 
 12e:	21 9a       	sbi	0x04, 1	; 4
	// Output compare mode on OC1A. Fast PWM with top = ICR1.
	// Clear OC1A on Compare match and set at bottom.
	TCCR1A |= (1<<COM1A1)|(0<<COM1A0)|(0<<COM1B1)|(0<<COM1B0)|(0<<FOC1A)|(0<<FOC1B)|(1<<WGM11)|(0<<WGM10);
 130:	e0 e8       	ldi	r30, 0x80	; 128
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	82 68       	ori	r24, 0x82	; 130
 138:	80 83       	st	Z, r24
	// Start timer with prescaler 64
	TCCR1B |= (0<<ICNC1)|(0<<ICES1)|(1<<WGM13)|(1<<WGM12)|(0<<CS12)|(1<<CS11)|(1<<CS10);
 13a:	e1 e8       	ldi	r30, 0x81	; 129
 13c:	f0 e0       	ldi	r31, 0x00	; 0
 13e:	80 81       	ld	r24, Z
 140:	8b 61       	ori	r24, 0x1B	; 27
 142:	80 83       	st	Z, r24
	ICR1 = 2499;  // F_CPU / (N * F_pwm) - 1, where N is the prescaler = 64, and F_pwm is the desired 50Hz frequency.
 144:	83 ec       	ldi	r24, 0xC3	; 195
 146:	99 e0       	ldi	r25, 0x09	; 9
 148:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 14c:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 150:	08 95       	ret

00000152 <ADC0init>:

void ADC0init()
// ADC0init will initialize analog input on ADC0, set voltage reference to Vcc, with 
// data right justified on data register. 
{
	DDRC	&= ~(0<<DDC0);
 152:	87 b1       	in	r24, 0x07	; 7
 154:	87 b9       	out	0x07, r24	; 7
	ADCSRA	= 0x87;			// Make ADC enable and select ck/128
 156:	87 e8       	ldi	r24, 0x87	; 135
 158:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	ADMUX	= (1<<REFS0);	// VCC reference, ADC0 single ended input
 15c:	80 e4       	ldi	r24, 0x40	; 64
 15e:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 162:	08 95       	ret

00000164 <main>:
int main()
{
 	unsigned short adcVal;	// Variable to store input ADC Value
	unsigned char  dc;		// Store calculated DC value based on adcVal
	
	stdout = &USART0_stream;	// change standard output to point to a USART stream
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	91 e0       	ldi	r25, 0x01	; 1
 168:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <__data_end+0x3>
 16c:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__data_end+0x2>
	
	PWM_OC1A_init();	// initialize pwm  on OC1A
 170:	0e 94 97 00 	call	0x12e	; 0x12e <PWM_OC1A_init>
	ADC0init();			// Initialize ADC0 input
 174:	0e 94 a9 00 	call	0x152	; 0x152 <ADC0init>
	usart0_init();		// Initialize USART0 for debugging and monitoring
 178:	0e 94 67 00 	call	0xce	; 0xce <usart0_init>
	while (1) 
	{
		adcVal = readADC();	// read ADC0;
		dc = (unsigned short)(100.0*adcVal / 1023); // get percentage of input voltage from Vcc. 
 		updateDC_OC1A(dc);	// Update OCR1A to update duty cycle of OC1A 
		printf("ADC Value = %u\n", adcVal);		// Monitoring output
 17c:	0e e0       	ldi	r16, 0x0E	; 14
 17e:	11 e0       	ldi	r17, 0x01	; 1
		printf("\tDuty cycle = %u%%\n", dc);	// Monitoring output
 180:	ce e1       	ldi	r28, 0x1E	; 30
 182:	d1 e0       	ldi	r29, 0x01	; 1
	ADC0init();			// Initialize ADC0 input
	usart0_init();		// Initialize USART0 for debugging and monitoring
	
	while (1) 
	{
		adcVal = readADC();	// read ADC0;
 184:	0e 94 8a 00 	call	0x114	; 0x114 <readADC>
 188:	5c 01       	movw	r10, r24
		dc = (unsigned short)(100.0*adcVal / 1023); // get percentage of input voltage from Vcc. 
 18a:	bc 01       	movw	r22, r24
 18c:	80 e0       	ldi	r24, 0x00	; 0
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	0e 94 9d 01 	call	0x33a	; 0x33a <__floatunsisf>
 194:	20 e0       	ldi	r18, 0x00	; 0
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	48 ec       	ldi	r20, 0xC8	; 200
 19a:	52 e4       	ldi	r21, 0x42	; 66
 19c:	0e 94 2b 02 	call	0x456	; 0x456 <__mulsf3>
 1a0:	20 e0       	ldi	r18, 0x00	; 0
 1a2:	30 ec       	ldi	r19, 0xC0	; 192
 1a4:	4f e7       	ldi	r20, 0x7F	; 127
 1a6:	54 e4       	ldi	r21, 0x44	; 68
 1a8:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <__divsf3>
 1ac:	0e 94 6e 01 	call	0x2dc	; 0x2dc <__fixunssfsi>
 1b0:	6b 01       	movw	r12, r22
 1b2:	7c 01       	movw	r14, r24
 		updateDC_OC1A(dc);	// Update OCR1A to update duty cycle of OC1A 
 1b4:	86 2f       	mov	r24, r22
 1b6:	0e 94 71 00 	call	0xe2	; 0xe2 <updateDC_OC1A>
		printf("ADC Value = %u\n", adcVal);		// Monitoring output
 1ba:	bf 92       	push	r11
 1bc:	af 92       	push	r10
 1be:	1f 93       	push	r17
 1c0:	0f 93       	push	r16
 1c2:	0e 94 98 02 	call	0x530	; 0x530 <printf>
		printf("\tDuty cycle = %u%%\n", dc);	// Monitoring output
 1c6:	dd 24       	eor	r13, r13
 1c8:	df 92       	push	r13
 1ca:	cf 92       	push	r12
 1cc:	df 93       	push	r29
 1ce:	cf 93       	push	r28
 1d0:	0e 94 98 02 	call	0x530	; 0x530 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1d4:	9f ef       	ldi	r25, 0xFF	; 255
 1d6:	20 e7       	ldi	r18, 0x70	; 112
 1d8:	82 e0       	ldi	r24, 0x02	; 2
 1da:	91 50       	subi	r25, 0x01	; 1
 1dc:	20 40       	sbci	r18, 0x00	; 0
 1de:	80 40       	sbci	r24, 0x00	; 0
 1e0:	e1 f7       	brne	.-8      	; 0x1da <main+0x76>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <main+0x80>
 1e4:	00 00       	nop
 1e6:	8d b7       	in	r24, 0x3d	; 61
 1e8:	9e b7       	in	r25, 0x3e	; 62
 1ea:	08 96       	adiw	r24, 0x08	; 8
 1ec:	0f b6       	in	r0, 0x3f	; 63
 1ee:	f8 94       	cli
 1f0:	9e bf       	out	0x3e, r25	; 62
 1f2:	0f be       	out	0x3f, r0	; 63
 1f4:	8d bf       	out	0x3d, r24	; 61
 1f6:	c6 cf       	rjmp	.-116    	; 0x184 <main+0x20>

000001f8 <__divsf3>:
 1f8:	0e 94 10 01 	call	0x220	; 0x220 <__divsf3x>
 1fc:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__fp_round>
 200:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__fp_pscB>
 204:	58 f0       	brcs	.+22     	; 0x21c <__divsf3+0x24>
 206:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <__fp_pscA>
 20a:	40 f0       	brcs	.+16     	; 0x21c <__divsf3+0x24>
 20c:	29 f4       	brne	.+10     	; 0x218 <__divsf3+0x20>
 20e:	5f 3f       	cpi	r21, 0xFF	; 255
 210:	29 f0       	breq	.+10     	; 0x21c <__divsf3+0x24>
 212:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__fp_inf>
 216:	51 11       	cpse	r21, r1
 218:	0c 94 25 02 	jmp	0x44a	; 0x44a <__fp_szero>
 21c:	0c 94 e0 01 	jmp	0x3c0	; 0x3c0 <__fp_nan>

00000220 <__divsf3x>:
 220:	0e 94 02 02 	call	0x404	; 0x404 <__fp_split3>
 224:	68 f3       	brcs	.-38     	; 0x200 <__divsf3+0x8>

00000226 <__divsf3_pse>:
 226:	99 23       	and	r25, r25
 228:	b1 f3       	breq	.-20     	; 0x216 <__divsf3+0x1e>
 22a:	55 23       	and	r21, r21
 22c:	91 f3       	breq	.-28     	; 0x212 <__divsf3+0x1a>
 22e:	95 1b       	sub	r25, r21
 230:	55 0b       	sbc	r21, r21
 232:	bb 27       	eor	r27, r27
 234:	aa 27       	eor	r26, r26
 236:	62 17       	cp	r22, r18
 238:	73 07       	cpc	r23, r19
 23a:	84 07       	cpc	r24, r20
 23c:	38 f0       	brcs	.+14     	; 0x24c <__divsf3_pse+0x26>
 23e:	9f 5f       	subi	r25, 0xFF	; 255
 240:	5f 4f       	sbci	r21, 0xFF	; 255
 242:	22 0f       	add	r18, r18
 244:	33 1f       	adc	r19, r19
 246:	44 1f       	adc	r20, r20
 248:	aa 1f       	adc	r26, r26
 24a:	a9 f3       	breq	.-22     	; 0x236 <__divsf3_pse+0x10>
 24c:	35 d0       	rcall	.+106    	; 0x2b8 <__divsf3_pse+0x92>
 24e:	0e 2e       	mov	r0, r30
 250:	3a f0       	brmi	.+14     	; 0x260 <__divsf3_pse+0x3a>
 252:	e0 e8       	ldi	r30, 0x80	; 128
 254:	32 d0       	rcall	.+100    	; 0x2ba <__divsf3_pse+0x94>
 256:	91 50       	subi	r25, 0x01	; 1
 258:	50 40       	sbci	r21, 0x00	; 0
 25a:	e6 95       	lsr	r30
 25c:	00 1c       	adc	r0, r0
 25e:	ca f7       	brpl	.-14     	; 0x252 <__divsf3_pse+0x2c>
 260:	2b d0       	rcall	.+86     	; 0x2b8 <__divsf3_pse+0x92>
 262:	fe 2f       	mov	r31, r30
 264:	29 d0       	rcall	.+82     	; 0x2b8 <__divsf3_pse+0x92>
 266:	66 0f       	add	r22, r22
 268:	77 1f       	adc	r23, r23
 26a:	88 1f       	adc	r24, r24
 26c:	bb 1f       	adc	r27, r27
 26e:	26 17       	cp	r18, r22
 270:	37 07       	cpc	r19, r23
 272:	48 07       	cpc	r20, r24
 274:	ab 07       	cpc	r26, r27
 276:	b0 e8       	ldi	r27, 0x80	; 128
 278:	09 f0       	breq	.+2      	; 0x27c <__divsf3_pse+0x56>
 27a:	bb 0b       	sbc	r27, r27
 27c:	80 2d       	mov	r24, r0
 27e:	bf 01       	movw	r22, r30
 280:	ff 27       	eor	r31, r31
 282:	93 58       	subi	r25, 0x83	; 131
 284:	5f 4f       	sbci	r21, 0xFF	; 255
 286:	3a f0       	brmi	.+14     	; 0x296 <__divsf3_pse+0x70>
 288:	9e 3f       	cpi	r25, 0xFE	; 254
 28a:	51 05       	cpc	r21, r1
 28c:	78 f0       	brcs	.+30     	; 0x2ac <__divsf3_pse+0x86>
 28e:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__fp_inf>
 292:	0c 94 25 02 	jmp	0x44a	; 0x44a <__fp_szero>
 296:	5f 3f       	cpi	r21, 0xFF	; 255
 298:	e4 f3       	brlt	.-8      	; 0x292 <__divsf3_pse+0x6c>
 29a:	98 3e       	cpi	r25, 0xE8	; 232
 29c:	d4 f3       	brlt	.-12     	; 0x292 <__divsf3_pse+0x6c>
 29e:	86 95       	lsr	r24
 2a0:	77 95       	ror	r23
 2a2:	67 95       	ror	r22
 2a4:	b7 95       	ror	r27
 2a6:	f7 95       	ror	r31
 2a8:	9f 5f       	subi	r25, 0xFF	; 255
 2aa:	c9 f7       	brne	.-14     	; 0x29e <__divsf3_pse+0x78>
 2ac:	88 0f       	add	r24, r24
 2ae:	91 1d       	adc	r25, r1
 2b0:	96 95       	lsr	r25
 2b2:	87 95       	ror	r24
 2b4:	97 f9       	bld	r25, 7
 2b6:	08 95       	ret
 2b8:	e1 e0       	ldi	r30, 0x01	; 1
 2ba:	66 0f       	add	r22, r22
 2bc:	77 1f       	adc	r23, r23
 2be:	88 1f       	adc	r24, r24
 2c0:	bb 1f       	adc	r27, r27
 2c2:	62 17       	cp	r22, r18
 2c4:	73 07       	cpc	r23, r19
 2c6:	84 07       	cpc	r24, r20
 2c8:	ba 07       	cpc	r27, r26
 2ca:	20 f0       	brcs	.+8      	; 0x2d4 <__divsf3_pse+0xae>
 2cc:	62 1b       	sub	r22, r18
 2ce:	73 0b       	sbc	r23, r19
 2d0:	84 0b       	sbc	r24, r20
 2d2:	ba 0b       	sbc	r27, r26
 2d4:	ee 1f       	adc	r30, r30
 2d6:	88 f7       	brcc	.-30     	; 0x2ba <__divsf3_pse+0x94>
 2d8:	e0 95       	com	r30
 2da:	08 95       	ret

000002dc <__fixunssfsi>:
 2dc:	0e 94 0a 02 	call	0x414	; 0x414 <__fp_splitA>
 2e0:	88 f0       	brcs	.+34     	; 0x304 <__fixunssfsi+0x28>
 2e2:	9f 57       	subi	r25, 0x7F	; 127
 2e4:	98 f0       	brcs	.+38     	; 0x30c <__fixunssfsi+0x30>
 2e6:	b9 2f       	mov	r27, r25
 2e8:	99 27       	eor	r25, r25
 2ea:	b7 51       	subi	r27, 0x17	; 23
 2ec:	b0 f0       	brcs	.+44     	; 0x31a <__fixunssfsi+0x3e>
 2ee:	e1 f0       	breq	.+56     	; 0x328 <__fixunssfsi+0x4c>
 2f0:	66 0f       	add	r22, r22
 2f2:	77 1f       	adc	r23, r23
 2f4:	88 1f       	adc	r24, r24
 2f6:	99 1f       	adc	r25, r25
 2f8:	1a f0       	brmi	.+6      	; 0x300 <__fixunssfsi+0x24>
 2fa:	ba 95       	dec	r27
 2fc:	c9 f7       	brne	.-14     	; 0x2f0 <__fixunssfsi+0x14>
 2fe:	14 c0       	rjmp	.+40     	; 0x328 <__fixunssfsi+0x4c>
 300:	b1 30       	cpi	r27, 0x01	; 1
 302:	91 f0       	breq	.+36     	; 0x328 <__fixunssfsi+0x4c>
 304:	0e 94 24 02 	call	0x448	; 0x448 <__fp_zero>
 308:	b1 e0       	ldi	r27, 0x01	; 1
 30a:	08 95       	ret
 30c:	0c 94 24 02 	jmp	0x448	; 0x448 <__fp_zero>
 310:	67 2f       	mov	r22, r23
 312:	78 2f       	mov	r23, r24
 314:	88 27       	eor	r24, r24
 316:	b8 5f       	subi	r27, 0xF8	; 248
 318:	39 f0       	breq	.+14     	; 0x328 <__fixunssfsi+0x4c>
 31a:	b9 3f       	cpi	r27, 0xF9	; 249
 31c:	cc f3       	brlt	.-14     	; 0x310 <__fixunssfsi+0x34>
 31e:	86 95       	lsr	r24
 320:	77 95       	ror	r23
 322:	67 95       	ror	r22
 324:	b3 95       	inc	r27
 326:	d9 f7       	brne	.-10     	; 0x31e <__fixunssfsi+0x42>
 328:	3e f4       	brtc	.+14     	; 0x338 <__fixunssfsi+0x5c>
 32a:	90 95       	com	r25
 32c:	80 95       	com	r24
 32e:	70 95       	com	r23
 330:	61 95       	neg	r22
 332:	7f 4f       	sbci	r23, 0xFF	; 255
 334:	8f 4f       	sbci	r24, 0xFF	; 255
 336:	9f 4f       	sbci	r25, 0xFF	; 255
 338:	08 95       	ret

0000033a <__floatunsisf>:
 33a:	e8 94       	clt
 33c:	09 c0       	rjmp	.+18     	; 0x350 <__floatsisf+0x12>

0000033e <__floatsisf>:
 33e:	97 fb       	bst	r25, 7
 340:	3e f4       	brtc	.+14     	; 0x350 <__floatsisf+0x12>
 342:	90 95       	com	r25
 344:	80 95       	com	r24
 346:	70 95       	com	r23
 348:	61 95       	neg	r22
 34a:	7f 4f       	sbci	r23, 0xFF	; 255
 34c:	8f 4f       	sbci	r24, 0xFF	; 255
 34e:	9f 4f       	sbci	r25, 0xFF	; 255
 350:	99 23       	and	r25, r25
 352:	a9 f0       	breq	.+42     	; 0x37e <__floatsisf+0x40>
 354:	f9 2f       	mov	r31, r25
 356:	96 e9       	ldi	r25, 0x96	; 150
 358:	bb 27       	eor	r27, r27
 35a:	93 95       	inc	r25
 35c:	f6 95       	lsr	r31
 35e:	87 95       	ror	r24
 360:	77 95       	ror	r23
 362:	67 95       	ror	r22
 364:	b7 95       	ror	r27
 366:	f1 11       	cpse	r31, r1
 368:	f8 cf       	rjmp	.-16     	; 0x35a <__floatsisf+0x1c>
 36a:	fa f4       	brpl	.+62     	; 0x3aa <__floatsisf+0x6c>
 36c:	bb 0f       	add	r27, r27
 36e:	11 f4       	brne	.+4      	; 0x374 <__floatsisf+0x36>
 370:	60 ff       	sbrs	r22, 0
 372:	1b c0       	rjmp	.+54     	; 0x3aa <__floatsisf+0x6c>
 374:	6f 5f       	subi	r22, 0xFF	; 255
 376:	7f 4f       	sbci	r23, 0xFF	; 255
 378:	8f 4f       	sbci	r24, 0xFF	; 255
 37a:	9f 4f       	sbci	r25, 0xFF	; 255
 37c:	16 c0       	rjmp	.+44     	; 0x3aa <__floatsisf+0x6c>
 37e:	88 23       	and	r24, r24
 380:	11 f0       	breq	.+4      	; 0x386 <__floatsisf+0x48>
 382:	96 e9       	ldi	r25, 0x96	; 150
 384:	11 c0       	rjmp	.+34     	; 0x3a8 <__floatsisf+0x6a>
 386:	77 23       	and	r23, r23
 388:	21 f0       	breq	.+8      	; 0x392 <__floatsisf+0x54>
 38a:	9e e8       	ldi	r25, 0x8E	; 142
 38c:	87 2f       	mov	r24, r23
 38e:	76 2f       	mov	r23, r22
 390:	05 c0       	rjmp	.+10     	; 0x39c <__floatsisf+0x5e>
 392:	66 23       	and	r22, r22
 394:	71 f0       	breq	.+28     	; 0x3b2 <__floatsisf+0x74>
 396:	96 e8       	ldi	r25, 0x86	; 134
 398:	86 2f       	mov	r24, r22
 39a:	70 e0       	ldi	r23, 0x00	; 0
 39c:	60 e0       	ldi	r22, 0x00	; 0
 39e:	2a f0       	brmi	.+10     	; 0x3aa <__floatsisf+0x6c>
 3a0:	9a 95       	dec	r25
 3a2:	66 0f       	add	r22, r22
 3a4:	77 1f       	adc	r23, r23
 3a6:	88 1f       	adc	r24, r24
 3a8:	da f7       	brpl	.-10     	; 0x3a0 <__floatsisf+0x62>
 3aa:	88 0f       	add	r24, r24
 3ac:	96 95       	lsr	r25
 3ae:	87 95       	ror	r24
 3b0:	97 f9       	bld	r25, 7
 3b2:	08 95       	ret

000003b4 <__fp_inf>:
 3b4:	97 f9       	bld	r25, 7
 3b6:	9f 67       	ori	r25, 0x7F	; 127
 3b8:	80 e8       	ldi	r24, 0x80	; 128
 3ba:	70 e0       	ldi	r23, 0x00	; 0
 3bc:	60 e0       	ldi	r22, 0x00	; 0
 3be:	08 95       	ret

000003c0 <__fp_nan>:
 3c0:	9f ef       	ldi	r25, 0xFF	; 255
 3c2:	80 ec       	ldi	r24, 0xC0	; 192
 3c4:	08 95       	ret

000003c6 <__fp_pscA>:
 3c6:	00 24       	eor	r0, r0
 3c8:	0a 94       	dec	r0
 3ca:	16 16       	cp	r1, r22
 3cc:	17 06       	cpc	r1, r23
 3ce:	18 06       	cpc	r1, r24
 3d0:	09 06       	cpc	r0, r25
 3d2:	08 95       	ret

000003d4 <__fp_pscB>:
 3d4:	00 24       	eor	r0, r0
 3d6:	0a 94       	dec	r0
 3d8:	12 16       	cp	r1, r18
 3da:	13 06       	cpc	r1, r19
 3dc:	14 06       	cpc	r1, r20
 3de:	05 06       	cpc	r0, r21
 3e0:	08 95       	ret

000003e2 <__fp_round>:
 3e2:	09 2e       	mov	r0, r25
 3e4:	03 94       	inc	r0
 3e6:	00 0c       	add	r0, r0
 3e8:	11 f4       	brne	.+4      	; 0x3ee <__fp_round+0xc>
 3ea:	88 23       	and	r24, r24
 3ec:	52 f0       	brmi	.+20     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3ee:	bb 0f       	add	r27, r27
 3f0:	40 f4       	brcc	.+16     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3f2:	bf 2b       	or	r27, r31
 3f4:	11 f4       	brne	.+4      	; 0x3fa <__fp_round+0x18>
 3f6:	60 ff       	sbrs	r22, 0
 3f8:	04 c0       	rjmp	.+8      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3fa:	6f 5f       	subi	r22, 0xFF	; 255
 3fc:	7f 4f       	sbci	r23, 0xFF	; 255
 3fe:	8f 4f       	sbci	r24, 0xFF	; 255
 400:	9f 4f       	sbci	r25, 0xFF	; 255
 402:	08 95       	ret

00000404 <__fp_split3>:
 404:	57 fd       	sbrc	r21, 7
 406:	90 58       	subi	r25, 0x80	; 128
 408:	44 0f       	add	r20, r20
 40a:	55 1f       	adc	r21, r21
 40c:	59 f0       	breq	.+22     	; 0x424 <__fp_splitA+0x10>
 40e:	5f 3f       	cpi	r21, 0xFF	; 255
 410:	71 f0       	breq	.+28     	; 0x42e <__fp_splitA+0x1a>
 412:	47 95       	ror	r20

00000414 <__fp_splitA>:
 414:	88 0f       	add	r24, r24
 416:	97 fb       	bst	r25, 7
 418:	99 1f       	adc	r25, r25
 41a:	61 f0       	breq	.+24     	; 0x434 <__fp_splitA+0x20>
 41c:	9f 3f       	cpi	r25, 0xFF	; 255
 41e:	79 f0       	breq	.+30     	; 0x43e <__fp_splitA+0x2a>
 420:	87 95       	ror	r24
 422:	08 95       	ret
 424:	12 16       	cp	r1, r18
 426:	13 06       	cpc	r1, r19
 428:	14 06       	cpc	r1, r20
 42a:	55 1f       	adc	r21, r21
 42c:	f2 cf       	rjmp	.-28     	; 0x412 <__fp_split3+0xe>
 42e:	46 95       	lsr	r20
 430:	f1 df       	rcall	.-30     	; 0x414 <__fp_splitA>
 432:	08 c0       	rjmp	.+16     	; 0x444 <__fp_splitA+0x30>
 434:	16 16       	cp	r1, r22
 436:	17 06       	cpc	r1, r23
 438:	18 06       	cpc	r1, r24
 43a:	99 1f       	adc	r25, r25
 43c:	f1 cf       	rjmp	.-30     	; 0x420 <__fp_splitA+0xc>
 43e:	86 95       	lsr	r24
 440:	71 05       	cpc	r23, r1
 442:	61 05       	cpc	r22, r1
 444:	08 94       	sec
 446:	08 95       	ret

00000448 <__fp_zero>:
 448:	e8 94       	clt

0000044a <__fp_szero>:
 44a:	bb 27       	eor	r27, r27
 44c:	66 27       	eor	r22, r22
 44e:	77 27       	eor	r23, r23
 450:	cb 01       	movw	r24, r22
 452:	97 f9       	bld	r25, 7
 454:	08 95       	ret

00000456 <__mulsf3>:
 456:	0e 94 3e 02 	call	0x47c	; 0x47c <__mulsf3x>
 45a:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__fp_round>
 45e:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <__fp_pscA>
 462:	38 f0       	brcs	.+14     	; 0x472 <__mulsf3+0x1c>
 464:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <__fp_pscB>
 468:	20 f0       	brcs	.+8      	; 0x472 <__mulsf3+0x1c>
 46a:	95 23       	and	r25, r21
 46c:	11 f0       	breq	.+4      	; 0x472 <__mulsf3+0x1c>
 46e:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__fp_inf>
 472:	0c 94 e0 01 	jmp	0x3c0	; 0x3c0 <__fp_nan>
 476:	11 24       	eor	r1, r1
 478:	0c 94 25 02 	jmp	0x44a	; 0x44a <__fp_szero>

0000047c <__mulsf3x>:
 47c:	0e 94 02 02 	call	0x404	; 0x404 <__fp_split3>
 480:	70 f3       	brcs	.-36     	; 0x45e <__mulsf3+0x8>

00000482 <__mulsf3_pse>:
 482:	95 9f       	mul	r25, r21
 484:	c1 f3       	breq	.-16     	; 0x476 <__mulsf3+0x20>
 486:	95 0f       	add	r25, r21
 488:	50 e0       	ldi	r21, 0x00	; 0
 48a:	55 1f       	adc	r21, r21
 48c:	62 9f       	mul	r22, r18
 48e:	f0 01       	movw	r30, r0
 490:	72 9f       	mul	r23, r18
 492:	bb 27       	eor	r27, r27
 494:	f0 0d       	add	r31, r0
 496:	b1 1d       	adc	r27, r1
 498:	63 9f       	mul	r22, r19
 49a:	aa 27       	eor	r26, r26
 49c:	f0 0d       	add	r31, r0
 49e:	b1 1d       	adc	r27, r1
 4a0:	aa 1f       	adc	r26, r26
 4a2:	64 9f       	mul	r22, r20
 4a4:	66 27       	eor	r22, r22
 4a6:	b0 0d       	add	r27, r0
 4a8:	a1 1d       	adc	r26, r1
 4aa:	66 1f       	adc	r22, r22
 4ac:	82 9f       	mul	r24, r18
 4ae:	22 27       	eor	r18, r18
 4b0:	b0 0d       	add	r27, r0
 4b2:	a1 1d       	adc	r26, r1
 4b4:	62 1f       	adc	r22, r18
 4b6:	73 9f       	mul	r23, r19
 4b8:	b0 0d       	add	r27, r0
 4ba:	a1 1d       	adc	r26, r1
 4bc:	62 1f       	adc	r22, r18
 4be:	83 9f       	mul	r24, r19
 4c0:	a0 0d       	add	r26, r0
 4c2:	61 1d       	adc	r22, r1
 4c4:	22 1f       	adc	r18, r18
 4c6:	74 9f       	mul	r23, r20
 4c8:	33 27       	eor	r19, r19
 4ca:	a0 0d       	add	r26, r0
 4cc:	61 1d       	adc	r22, r1
 4ce:	23 1f       	adc	r18, r19
 4d0:	84 9f       	mul	r24, r20
 4d2:	60 0d       	add	r22, r0
 4d4:	21 1d       	adc	r18, r1
 4d6:	82 2f       	mov	r24, r18
 4d8:	76 2f       	mov	r23, r22
 4da:	6a 2f       	mov	r22, r26
 4dc:	11 24       	eor	r1, r1
 4de:	9f 57       	subi	r25, 0x7F	; 127
 4e0:	50 40       	sbci	r21, 0x00	; 0
 4e2:	9a f0       	brmi	.+38     	; 0x50a <__mulsf3_pse+0x88>
 4e4:	f1 f0       	breq	.+60     	; 0x522 <__mulsf3_pse+0xa0>
 4e6:	88 23       	and	r24, r24
 4e8:	4a f0       	brmi	.+18     	; 0x4fc <__mulsf3_pse+0x7a>
 4ea:	ee 0f       	add	r30, r30
 4ec:	ff 1f       	adc	r31, r31
 4ee:	bb 1f       	adc	r27, r27
 4f0:	66 1f       	adc	r22, r22
 4f2:	77 1f       	adc	r23, r23
 4f4:	88 1f       	adc	r24, r24
 4f6:	91 50       	subi	r25, 0x01	; 1
 4f8:	50 40       	sbci	r21, 0x00	; 0
 4fa:	a9 f7       	brne	.-22     	; 0x4e6 <__mulsf3_pse+0x64>
 4fc:	9e 3f       	cpi	r25, 0xFE	; 254
 4fe:	51 05       	cpc	r21, r1
 500:	80 f0       	brcs	.+32     	; 0x522 <__mulsf3_pse+0xa0>
 502:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__fp_inf>
 506:	0c 94 25 02 	jmp	0x44a	; 0x44a <__fp_szero>
 50a:	5f 3f       	cpi	r21, 0xFF	; 255
 50c:	e4 f3       	brlt	.-8      	; 0x506 <__mulsf3_pse+0x84>
 50e:	98 3e       	cpi	r25, 0xE8	; 232
 510:	d4 f3       	brlt	.-12     	; 0x506 <__mulsf3_pse+0x84>
 512:	86 95       	lsr	r24
 514:	77 95       	ror	r23
 516:	67 95       	ror	r22
 518:	b7 95       	ror	r27
 51a:	f7 95       	ror	r31
 51c:	e7 95       	ror	r30
 51e:	9f 5f       	subi	r25, 0xFF	; 255
 520:	c1 f7       	brne	.-16     	; 0x512 <__mulsf3_pse+0x90>
 522:	fe 2b       	or	r31, r30
 524:	88 0f       	add	r24, r24
 526:	91 1d       	adc	r25, r1
 528:	96 95       	lsr	r25
 52a:	87 95       	ror	r24
 52c:	97 f9       	bld	r25, 7
 52e:	08 95       	ret

00000530 <printf>:
 530:	a0 e0       	ldi	r26, 0x00	; 0
 532:	b0 e0       	ldi	r27, 0x00	; 0
 534:	ee e9       	ldi	r30, 0x9E	; 158
 536:	f2 e0       	ldi	r31, 0x02	; 2
 538:	0c 94 4f 05 	jmp	0xa9e	; 0xa9e <__prologue_saves__+0x20>
 53c:	ae 01       	movw	r20, r28
 53e:	4b 5f       	subi	r20, 0xFB	; 251
 540:	5f 4f       	sbci	r21, 0xFF	; 255
 542:	fa 01       	movw	r30, r20
 544:	61 91       	ld	r22, Z+
 546:	71 91       	ld	r23, Z+
 548:	af 01       	movw	r20, r30
 54a:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <__data_end+0x2>
 54e:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <__data_end+0x3>
 552:	0e 94 ae 02 	call	0x55c	; 0x55c <vfprintf>
 556:	e2 e0       	ldi	r30, 0x02	; 2
 558:	0c 94 6b 05 	jmp	0xad6	; 0xad6 <__epilogue_restores__+0x20>

0000055c <vfprintf>:
 55c:	ab e0       	ldi	r26, 0x0B	; 11
 55e:	b0 e0       	ldi	r27, 0x00	; 0
 560:	e4 eb       	ldi	r30, 0xB4	; 180
 562:	f2 e0       	ldi	r31, 0x02	; 2
 564:	0c 94 3f 05 	jmp	0xa7e	; 0xa7e <__prologue_saves__>
 568:	6c 01       	movw	r12, r24
 56a:	7b 01       	movw	r14, r22
 56c:	8a 01       	movw	r16, r20
 56e:	fc 01       	movw	r30, r24
 570:	17 82       	std	Z+7, r1	; 0x07
 572:	16 82       	std	Z+6, r1	; 0x06
 574:	83 81       	ldd	r24, Z+3	; 0x03
 576:	81 ff       	sbrs	r24, 1
 578:	cc c1       	rjmp	.+920    	; 0x912 <__stack+0x13>
 57a:	ce 01       	movw	r24, r28
 57c:	01 96       	adiw	r24, 0x01	; 1
 57e:	3c 01       	movw	r6, r24
 580:	f6 01       	movw	r30, r12
 582:	93 81       	ldd	r25, Z+3	; 0x03
 584:	f7 01       	movw	r30, r14
 586:	93 fd       	sbrc	r25, 3
 588:	85 91       	lpm	r24, Z+
 58a:	93 ff       	sbrs	r25, 3
 58c:	81 91       	ld	r24, Z+
 58e:	7f 01       	movw	r14, r30
 590:	88 23       	and	r24, r24
 592:	09 f4       	brne	.+2      	; 0x596 <vfprintf+0x3a>
 594:	ba c1       	rjmp	.+884    	; 0x90a <__stack+0xb>
 596:	85 32       	cpi	r24, 0x25	; 37
 598:	39 f4       	brne	.+14     	; 0x5a8 <vfprintf+0x4c>
 59a:	93 fd       	sbrc	r25, 3
 59c:	85 91       	lpm	r24, Z+
 59e:	93 ff       	sbrs	r25, 3
 5a0:	81 91       	ld	r24, Z+
 5a2:	7f 01       	movw	r14, r30
 5a4:	85 32       	cpi	r24, 0x25	; 37
 5a6:	29 f4       	brne	.+10     	; 0x5b2 <vfprintf+0x56>
 5a8:	b6 01       	movw	r22, r12
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 5b0:	e7 cf       	rjmp	.-50     	; 0x580 <vfprintf+0x24>
 5b2:	91 2c       	mov	r9, r1
 5b4:	21 2c       	mov	r2, r1
 5b6:	31 2c       	mov	r3, r1
 5b8:	ff e1       	ldi	r31, 0x1F	; 31
 5ba:	f3 15       	cp	r31, r3
 5bc:	d8 f0       	brcs	.+54     	; 0x5f4 <vfprintf+0x98>
 5be:	8b 32       	cpi	r24, 0x2B	; 43
 5c0:	79 f0       	breq	.+30     	; 0x5e0 <vfprintf+0x84>
 5c2:	38 f4       	brcc	.+14     	; 0x5d2 <vfprintf+0x76>
 5c4:	80 32       	cpi	r24, 0x20	; 32
 5c6:	79 f0       	breq	.+30     	; 0x5e6 <vfprintf+0x8a>
 5c8:	83 32       	cpi	r24, 0x23	; 35
 5ca:	a1 f4       	brne	.+40     	; 0x5f4 <vfprintf+0x98>
 5cc:	23 2d       	mov	r18, r3
 5ce:	20 61       	ori	r18, 0x10	; 16
 5d0:	1d c0       	rjmp	.+58     	; 0x60c <vfprintf+0xb0>
 5d2:	8d 32       	cpi	r24, 0x2D	; 45
 5d4:	61 f0       	breq	.+24     	; 0x5ee <vfprintf+0x92>
 5d6:	80 33       	cpi	r24, 0x30	; 48
 5d8:	69 f4       	brne	.+26     	; 0x5f4 <vfprintf+0x98>
 5da:	23 2d       	mov	r18, r3
 5dc:	21 60       	ori	r18, 0x01	; 1
 5de:	16 c0       	rjmp	.+44     	; 0x60c <vfprintf+0xb0>
 5e0:	83 2d       	mov	r24, r3
 5e2:	82 60       	ori	r24, 0x02	; 2
 5e4:	38 2e       	mov	r3, r24
 5e6:	e3 2d       	mov	r30, r3
 5e8:	e4 60       	ori	r30, 0x04	; 4
 5ea:	3e 2e       	mov	r3, r30
 5ec:	2a c0       	rjmp	.+84     	; 0x642 <vfprintf+0xe6>
 5ee:	f3 2d       	mov	r31, r3
 5f0:	f8 60       	ori	r31, 0x08	; 8
 5f2:	1d c0       	rjmp	.+58     	; 0x62e <vfprintf+0xd2>
 5f4:	37 fc       	sbrc	r3, 7
 5f6:	2d c0       	rjmp	.+90     	; 0x652 <vfprintf+0xf6>
 5f8:	20 ed       	ldi	r18, 0xD0	; 208
 5fa:	28 0f       	add	r18, r24
 5fc:	2a 30       	cpi	r18, 0x0A	; 10
 5fe:	40 f0       	brcs	.+16     	; 0x610 <vfprintf+0xb4>
 600:	8e 32       	cpi	r24, 0x2E	; 46
 602:	b9 f4       	brne	.+46     	; 0x632 <vfprintf+0xd6>
 604:	36 fc       	sbrc	r3, 6
 606:	81 c1       	rjmp	.+770    	; 0x90a <__stack+0xb>
 608:	23 2d       	mov	r18, r3
 60a:	20 64       	ori	r18, 0x40	; 64
 60c:	32 2e       	mov	r3, r18
 60e:	19 c0       	rjmp	.+50     	; 0x642 <vfprintf+0xe6>
 610:	36 fe       	sbrs	r3, 6
 612:	06 c0       	rjmp	.+12     	; 0x620 <vfprintf+0xc4>
 614:	8a e0       	ldi	r24, 0x0A	; 10
 616:	98 9e       	mul	r9, r24
 618:	20 0d       	add	r18, r0
 61a:	11 24       	eor	r1, r1
 61c:	92 2e       	mov	r9, r18
 61e:	11 c0       	rjmp	.+34     	; 0x642 <vfprintf+0xe6>
 620:	ea e0       	ldi	r30, 0x0A	; 10
 622:	2e 9e       	mul	r2, r30
 624:	20 0d       	add	r18, r0
 626:	11 24       	eor	r1, r1
 628:	22 2e       	mov	r2, r18
 62a:	f3 2d       	mov	r31, r3
 62c:	f0 62       	ori	r31, 0x20	; 32
 62e:	3f 2e       	mov	r3, r31
 630:	08 c0       	rjmp	.+16     	; 0x642 <vfprintf+0xe6>
 632:	8c 36       	cpi	r24, 0x6C	; 108
 634:	21 f4       	brne	.+8      	; 0x63e <vfprintf+0xe2>
 636:	83 2d       	mov	r24, r3
 638:	80 68       	ori	r24, 0x80	; 128
 63a:	38 2e       	mov	r3, r24
 63c:	02 c0       	rjmp	.+4      	; 0x642 <vfprintf+0xe6>
 63e:	88 36       	cpi	r24, 0x68	; 104
 640:	41 f4       	brne	.+16     	; 0x652 <vfprintf+0xf6>
 642:	f7 01       	movw	r30, r14
 644:	93 fd       	sbrc	r25, 3
 646:	85 91       	lpm	r24, Z+
 648:	93 ff       	sbrs	r25, 3
 64a:	81 91       	ld	r24, Z+
 64c:	7f 01       	movw	r14, r30
 64e:	81 11       	cpse	r24, r1
 650:	b3 cf       	rjmp	.-154    	; 0x5b8 <vfprintf+0x5c>
 652:	98 2f       	mov	r25, r24
 654:	9f 7d       	andi	r25, 0xDF	; 223
 656:	95 54       	subi	r25, 0x45	; 69
 658:	93 30       	cpi	r25, 0x03	; 3
 65a:	28 f4       	brcc	.+10     	; 0x666 <vfprintf+0x10a>
 65c:	0c 5f       	subi	r16, 0xFC	; 252
 65e:	1f 4f       	sbci	r17, 0xFF	; 255
 660:	9f e3       	ldi	r25, 0x3F	; 63
 662:	99 83       	std	Y+1, r25	; 0x01
 664:	0d c0       	rjmp	.+26     	; 0x680 <vfprintf+0x124>
 666:	83 36       	cpi	r24, 0x63	; 99
 668:	31 f0       	breq	.+12     	; 0x676 <vfprintf+0x11a>
 66a:	83 37       	cpi	r24, 0x73	; 115
 66c:	71 f0       	breq	.+28     	; 0x68a <vfprintf+0x12e>
 66e:	83 35       	cpi	r24, 0x53	; 83
 670:	09 f0       	breq	.+2      	; 0x674 <vfprintf+0x118>
 672:	59 c0       	rjmp	.+178    	; 0x726 <vfprintf+0x1ca>
 674:	21 c0       	rjmp	.+66     	; 0x6b8 <vfprintf+0x15c>
 676:	f8 01       	movw	r30, r16
 678:	80 81       	ld	r24, Z
 67a:	89 83       	std	Y+1, r24	; 0x01
 67c:	0e 5f       	subi	r16, 0xFE	; 254
 67e:	1f 4f       	sbci	r17, 0xFF	; 255
 680:	88 24       	eor	r8, r8
 682:	83 94       	inc	r8
 684:	91 2c       	mov	r9, r1
 686:	53 01       	movw	r10, r6
 688:	13 c0       	rjmp	.+38     	; 0x6b0 <vfprintf+0x154>
 68a:	28 01       	movw	r4, r16
 68c:	f2 e0       	ldi	r31, 0x02	; 2
 68e:	4f 0e       	add	r4, r31
 690:	51 1c       	adc	r5, r1
 692:	f8 01       	movw	r30, r16
 694:	a0 80       	ld	r10, Z
 696:	b1 80       	ldd	r11, Z+1	; 0x01
 698:	36 fe       	sbrs	r3, 6
 69a:	03 c0       	rjmp	.+6      	; 0x6a2 <vfprintf+0x146>
 69c:	69 2d       	mov	r22, r9
 69e:	70 e0       	ldi	r23, 0x00	; 0
 6a0:	02 c0       	rjmp	.+4      	; 0x6a6 <vfprintf+0x14a>
 6a2:	6f ef       	ldi	r22, 0xFF	; 255
 6a4:	7f ef       	ldi	r23, 0xFF	; 255
 6a6:	c5 01       	movw	r24, r10
 6a8:	0e 94 9a 04 	call	0x934	; 0x934 <strnlen>
 6ac:	4c 01       	movw	r8, r24
 6ae:	82 01       	movw	r16, r4
 6b0:	f3 2d       	mov	r31, r3
 6b2:	ff 77       	andi	r31, 0x7F	; 127
 6b4:	3f 2e       	mov	r3, r31
 6b6:	16 c0       	rjmp	.+44     	; 0x6e4 <vfprintf+0x188>
 6b8:	28 01       	movw	r4, r16
 6ba:	22 e0       	ldi	r18, 0x02	; 2
 6bc:	42 0e       	add	r4, r18
 6be:	51 1c       	adc	r5, r1
 6c0:	f8 01       	movw	r30, r16
 6c2:	a0 80       	ld	r10, Z
 6c4:	b1 80       	ldd	r11, Z+1	; 0x01
 6c6:	36 fe       	sbrs	r3, 6
 6c8:	03 c0       	rjmp	.+6      	; 0x6d0 <vfprintf+0x174>
 6ca:	69 2d       	mov	r22, r9
 6cc:	70 e0       	ldi	r23, 0x00	; 0
 6ce:	02 c0       	rjmp	.+4      	; 0x6d4 <vfprintf+0x178>
 6d0:	6f ef       	ldi	r22, 0xFF	; 255
 6d2:	7f ef       	ldi	r23, 0xFF	; 255
 6d4:	c5 01       	movw	r24, r10
 6d6:	0e 94 8f 04 	call	0x91e	; 0x91e <strnlen_P>
 6da:	4c 01       	movw	r8, r24
 6dc:	f3 2d       	mov	r31, r3
 6de:	f0 68       	ori	r31, 0x80	; 128
 6e0:	3f 2e       	mov	r3, r31
 6e2:	82 01       	movw	r16, r4
 6e4:	33 fc       	sbrc	r3, 3
 6e6:	1b c0       	rjmp	.+54     	; 0x71e <vfprintf+0x1c2>
 6e8:	82 2d       	mov	r24, r2
 6ea:	90 e0       	ldi	r25, 0x00	; 0
 6ec:	88 16       	cp	r8, r24
 6ee:	99 06       	cpc	r9, r25
 6f0:	b0 f4       	brcc	.+44     	; 0x71e <vfprintf+0x1c2>
 6f2:	b6 01       	movw	r22, r12
 6f4:	80 e2       	ldi	r24, 0x20	; 32
 6f6:	90 e0       	ldi	r25, 0x00	; 0
 6f8:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 6fc:	2a 94       	dec	r2
 6fe:	f4 cf       	rjmp	.-24     	; 0x6e8 <vfprintf+0x18c>
 700:	f5 01       	movw	r30, r10
 702:	37 fc       	sbrc	r3, 7
 704:	85 91       	lpm	r24, Z+
 706:	37 fe       	sbrs	r3, 7
 708:	81 91       	ld	r24, Z+
 70a:	5f 01       	movw	r10, r30
 70c:	b6 01       	movw	r22, r12
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 714:	21 10       	cpse	r2, r1
 716:	2a 94       	dec	r2
 718:	21 e0       	ldi	r18, 0x01	; 1
 71a:	82 1a       	sub	r8, r18
 71c:	91 08       	sbc	r9, r1
 71e:	81 14       	cp	r8, r1
 720:	91 04       	cpc	r9, r1
 722:	71 f7       	brne	.-36     	; 0x700 <vfprintf+0x1a4>
 724:	e8 c0       	rjmp	.+464    	; 0x8f6 <vfprintf+0x39a>
 726:	84 36       	cpi	r24, 0x64	; 100
 728:	11 f0       	breq	.+4      	; 0x72e <vfprintf+0x1d2>
 72a:	89 36       	cpi	r24, 0x69	; 105
 72c:	41 f5       	brne	.+80     	; 0x77e <vfprintf+0x222>
 72e:	f8 01       	movw	r30, r16
 730:	37 fe       	sbrs	r3, 7
 732:	07 c0       	rjmp	.+14     	; 0x742 <vfprintf+0x1e6>
 734:	60 81       	ld	r22, Z
 736:	71 81       	ldd	r23, Z+1	; 0x01
 738:	82 81       	ldd	r24, Z+2	; 0x02
 73a:	93 81       	ldd	r25, Z+3	; 0x03
 73c:	0c 5f       	subi	r16, 0xFC	; 252
 73e:	1f 4f       	sbci	r17, 0xFF	; 255
 740:	08 c0       	rjmp	.+16     	; 0x752 <vfprintf+0x1f6>
 742:	60 81       	ld	r22, Z
 744:	71 81       	ldd	r23, Z+1	; 0x01
 746:	07 2e       	mov	r0, r23
 748:	00 0c       	add	r0, r0
 74a:	88 0b       	sbc	r24, r24
 74c:	99 0b       	sbc	r25, r25
 74e:	0e 5f       	subi	r16, 0xFE	; 254
 750:	1f 4f       	sbci	r17, 0xFF	; 255
 752:	f3 2d       	mov	r31, r3
 754:	ff 76       	andi	r31, 0x6F	; 111
 756:	3f 2e       	mov	r3, r31
 758:	97 ff       	sbrs	r25, 7
 75a:	09 c0       	rjmp	.+18     	; 0x76e <vfprintf+0x212>
 75c:	90 95       	com	r25
 75e:	80 95       	com	r24
 760:	70 95       	com	r23
 762:	61 95       	neg	r22
 764:	7f 4f       	sbci	r23, 0xFF	; 255
 766:	8f 4f       	sbci	r24, 0xFF	; 255
 768:	9f 4f       	sbci	r25, 0xFF	; 255
 76a:	f0 68       	ori	r31, 0x80	; 128
 76c:	3f 2e       	mov	r3, r31
 76e:	2a e0       	ldi	r18, 0x0A	; 10
 770:	30 e0       	ldi	r19, 0x00	; 0
 772:	a3 01       	movw	r20, r6
 774:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__ultoa_invert>
 778:	88 2e       	mov	r8, r24
 77a:	86 18       	sub	r8, r6
 77c:	45 c0       	rjmp	.+138    	; 0x808 <vfprintf+0x2ac>
 77e:	85 37       	cpi	r24, 0x75	; 117
 780:	31 f4       	brne	.+12     	; 0x78e <vfprintf+0x232>
 782:	23 2d       	mov	r18, r3
 784:	2f 7e       	andi	r18, 0xEF	; 239
 786:	b2 2e       	mov	r11, r18
 788:	2a e0       	ldi	r18, 0x0A	; 10
 78a:	30 e0       	ldi	r19, 0x00	; 0
 78c:	25 c0       	rjmp	.+74     	; 0x7d8 <vfprintf+0x27c>
 78e:	93 2d       	mov	r25, r3
 790:	99 7f       	andi	r25, 0xF9	; 249
 792:	b9 2e       	mov	r11, r25
 794:	8f 36       	cpi	r24, 0x6F	; 111
 796:	c1 f0       	breq	.+48     	; 0x7c8 <vfprintf+0x26c>
 798:	18 f4       	brcc	.+6      	; 0x7a0 <vfprintf+0x244>
 79a:	88 35       	cpi	r24, 0x58	; 88
 79c:	79 f0       	breq	.+30     	; 0x7bc <vfprintf+0x260>
 79e:	b5 c0       	rjmp	.+362    	; 0x90a <__stack+0xb>
 7a0:	80 37       	cpi	r24, 0x70	; 112
 7a2:	19 f0       	breq	.+6      	; 0x7aa <vfprintf+0x24e>
 7a4:	88 37       	cpi	r24, 0x78	; 120
 7a6:	21 f0       	breq	.+8      	; 0x7b0 <vfprintf+0x254>
 7a8:	b0 c0       	rjmp	.+352    	; 0x90a <__stack+0xb>
 7aa:	e9 2f       	mov	r30, r25
 7ac:	e0 61       	ori	r30, 0x10	; 16
 7ae:	be 2e       	mov	r11, r30
 7b0:	b4 fe       	sbrs	r11, 4
 7b2:	0d c0       	rjmp	.+26     	; 0x7ce <vfprintf+0x272>
 7b4:	fb 2d       	mov	r31, r11
 7b6:	f4 60       	ori	r31, 0x04	; 4
 7b8:	bf 2e       	mov	r11, r31
 7ba:	09 c0       	rjmp	.+18     	; 0x7ce <vfprintf+0x272>
 7bc:	34 fe       	sbrs	r3, 4
 7be:	0a c0       	rjmp	.+20     	; 0x7d4 <vfprintf+0x278>
 7c0:	29 2f       	mov	r18, r25
 7c2:	26 60       	ori	r18, 0x06	; 6
 7c4:	b2 2e       	mov	r11, r18
 7c6:	06 c0       	rjmp	.+12     	; 0x7d4 <vfprintf+0x278>
 7c8:	28 e0       	ldi	r18, 0x08	; 8
 7ca:	30 e0       	ldi	r19, 0x00	; 0
 7cc:	05 c0       	rjmp	.+10     	; 0x7d8 <vfprintf+0x27c>
 7ce:	20 e1       	ldi	r18, 0x10	; 16
 7d0:	30 e0       	ldi	r19, 0x00	; 0
 7d2:	02 c0       	rjmp	.+4      	; 0x7d8 <vfprintf+0x27c>
 7d4:	20 e1       	ldi	r18, 0x10	; 16
 7d6:	32 e0       	ldi	r19, 0x02	; 2
 7d8:	f8 01       	movw	r30, r16
 7da:	b7 fe       	sbrs	r11, 7
 7dc:	07 c0       	rjmp	.+14     	; 0x7ec <vfprintf+0x290>
 7de:	60 81       	ld	r22, Z
 7e0:	71 81       	ldd	r23, Z+1	; 0x01
 7e2:	82 81       	ldd	r24, Z+2	; 0x02
 7e4:	93 81       	ldd	r25, Z+3	; 0x03
 7e6:	0c 5f       	subi	r16, 0xFC	; 252
 7e8:	1f 4f       	sbci	r17, 0xFF	; 255
 7ea:	06 c0       	rjmp	.+12     	; 0x7f8 <vfprintf+0x29c>
 7ec:	60 81       	ld	r22, Z
 7ee:	71 81       	ldd	r23, Z+1	; 0x01
 7f0:	80 e0       	ldi	r24, 0x00	; 0
 7f2:	90 e0       	ldi	r25, 0x00	; 0
 7f4:	0e 5f       	subi	r16, 0xFE	; 254
 7f6:	1f 4f       	sbci	r17, 0xFF	; 255
 7f8:	a3 01       	movw	r20, r6
 7fa:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__ultoa_invert>
 7fe:	88 2e       	mov	r8, r24
 800:	86 18       	sub	r8, r6
 802:	fb 2d       	mov	r31, r11
 804:	ff 77       	andi	r31, 0x7F	; 127
 806:	3f 2e       	mov	r3, r31
 808:	36 fe       	sbrs	r3, 6
 80a:	0d c0       	rjmp	.+26     	; 0x826 <vfprintf+0x2ca>
 80c:	23 2d       	mov	r18, r3
 80e:	2e 7f       	andi	r18, 0xFE	; 254
 810:	a2 2e       	mov	r10, r18
 812:	89 14       	cp	r8, r9
 814:	58 f4       	brcc	.+22     	; 0x82c <vfprintf+0x2d0>
 816:	34 fe       	sbrs	r3, 4
 818:	0b c0       	rjmp	.+22     	; 0x830 <vfprintf+0x2d4>
 81a:	32 fc       	sbrc	r3, 2
 81c:	09 c0       	rjmp	.+18     	; 0x830 <vfprintf+0x2d4>
 81e:	83 2d       	mov	r24, r3
 820:	8e 7e       	andi	r24, 0xEE	; 238
 822:	a8 2e       	mov	r10, r24
 824:	05 c0       	rjmp	.+10     	; 0x830 <vfprintf+0x2d4>
 826:	b8 2c       	mov	r11, r8
 828:	a3 2c       	mov	r10, r3
 82a:	03 c0       	rjmp	.+6      	; 0x832 <vfprintf+0x2d6>
 82c:	b8 2c       	mov	r11, r8
 82e:	01 c0       	rjmp	.+2      	; 0x832 <vfprintf+0x2d6>
 830:	b9 2c       	mov	r11, r9
 832:	a4 fe       	sbrs	r10, 4
 834:	0f c0       	rjmp	.+30     	; 0x854 <vfprintf+0x2f8>
 836:	fe 01       	movw	r30, r28
 838:	e8 0d       	add	r30, r8
 83a:	f1 1d       	adc	r31, r1
 83c:	80 81       	ld	r24, Z
 83e:	80 33       	cpi	r24, 0x30	; 48
 840:	21 f4       	brne	.+8      	; 0x84a <vfprintf+0x2ee>
 842:	9a 2d       	mov	r25, r10
 844:	99 7e       	andi	r25, 0xE9	; 233
 846:	a9 2e       	mov	r10, r25
 848:	09 c0       	rjmp	.+18     	; 0x85c <vfprintf+0x300>
 84a:	a2 fe       	sbrs	r10, 2
 84c:	06 c0       	rjmp	.+12     	; 0x85a <vfprintf+0x2fe>
 84e:	b3 94       	inc	r11
 850:	b3 94       	inc	r11
 852:	04 c0       	rjmp	.+8      	; 0x85c <vfprintf+0x300>
 854:	8a 2d       	mov	r24, r10
 856:	86 78       	andi	r24, 0x86	; 134
 858:	09 f0       	breq	.+2      	; 0x85c <vfprintf+0x300>
 85a:	b3 94       	inc	r11
 85c:	a3 fc       	sbrc	r10, 3
 85e:	11 c0       	rjmp	.+34     	; 0x882 <vfprintf+0x326>
 860:	a0 fe       	sbrs	r10, 0
 862:	06 c0       	rjmp	.+12     	; 0x870 <vfprintf+0x314>
 864:	b2 14       	cp	r11, r2
 866:	88 f4       	brcc	.+34     	; 0x88a <vfprintf+0x32e>
 868:	28 0c       	add	r2, r8
 86a:	92 2c       	mov	r9, r2
 86c:	9b 18       	sub	r9, r11
 86e:	0e c0       	rjmp	.+28     	; 0x88c <vfprintf+0x330>
 870:	b2 14       	cp	r11, r2
 872:	60 f4       	brcc	.+24     	; 0x88c <vfprintf+0x330>
 874:	b6 01       	movw	r22, r12
 876:	80 e2       	ldi	r24, 0x20	; 32
 878:	90 e0       	ldi	r25, 0x00	; 0
 87a:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 87e:	b3 94       	inc	r11
 880:	f7 cf       	rjmp	.-18     	; 0x870 <vfprintf+0x314>
 882:	b2 14       	cp	r11, r2
 884:	18 f4       	brcc	.+6      	; 0x88c <vfprintf+0x330>
 886:	2b 18       	sub	r2, r11
 888:	02 c0       	rjmp	.+4      	; 0x88e <vfprintf+0x332>
 88a:	98 2c       	mov	r9, r8
 88c:	21 2c       	mov	r2, r1
 88e:	a4 fe       	sbrs	r10, 4
 890:	10 c0       	rjmp	.+32     	; 0x8b2 <vfprintf+0x356>
 892:	b6 01       	movw	r22, r12
 894:	80 e3       	ldi	r24, 0x30	; 48
 896:	90 e0       	ldi	r25, 0x00	; 0
 898:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 89c:	a2 fe       	sbrs	r10, 2
 89e:	17 c0       	rjmp	.+46     	; 0x8ce <vfprintf+0x372>
 8a0:	a1 fc       	sbrc	r10, 1
 8a2:	03 c0       	rjmp	.+6      	; 0x8aa <vfprintf+0x34e>
 8a4:	88 e7       	ldi	r24, 0x78	; 120
 8a6:	90 e0       	ldi	r25, 0x00	; 0
 8a8:	02 c0       	rjmp	.+4      	; 0x8ae <vfprintf+0x352>
 8aa:	88 e5       	ldi	r24, 0x58	; 88
 8ac:	90 e0       	ldi	r25, 0x00	; 0
 8ae:	b6 01       	movw	r22, r12
 8b0:	0c c0       	rjmp	.+24     	; 0x8ca <vfprintf+0x36e>
 8b2:	8a 2d       	mov	r24, r10
 8b4:	86 78       	andi	r24, 0x86	; 134
 8b6:	59 f0       	breq	.+22     	; 0x8ce <vfprintf+0x372>
 8b8:	a1 fe       	sbrs	r10, 1
 8ba:	02 c0       	rjmp	.+4      	; 0x8c0 <vfprintf+0x364>
 8bc:	8b e2       	ldi	r24, 0x2B	; 43
 8be:	01 c0       	rjmp	.+2      	; 0x8c2 <vfprintf+0x366>
 8c0:	80 e2       	ldi	r24, 0x20	; 32
 8c2:	a7 fc       	sbrc	r10, 7
 8c4:	8d e2       	ldi	r24, 0x2D	; 45
 8c6:	b6 01       	movw	r22, r12
 8c8:	90 e0       	ldi	r25, 0x00	; 0
 8ca:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 8ce:	89 14       	cp	r8, r9
 8d0:	38 f4       	brcc	.+14     	; 0x8e0 <vfprintf+0x384>
 8d2:	b6 01       	movw	r22, r12
 8d4:	80 e3       	ldi	r24, 0x30	; 48
 8d6:	90 e0       	ldi	r25, 0x00	; 0
 8d8:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 8dc:	9a 94       	dec	r9
 8de:	f7 cf       	rjmp	.-18     	; 0x8ce <vfprintf+0x372>
 8e0:	8a 94       	dec	r8
 8e2:	f3 01       	movw	r30, r6
 8e4:	e8 0d       	add	r30, r8
 8e6:	f1 1d       	adc	r31, r1
 8e8:	80 81       	ld	r24, Z
 8ea:	b6 01       	movw	r22, r12
 8ec:	90 e0       	ldi	r25, 0x00	; 0
 8ee:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 8f2:	81 10       	cpse	r8, r1
 8f4:	f5 cf       	rjmp	.-22     	; 0x8e0 <vfprintf+0x384>
 8f6:	22 20       	and	r2, r2
 8f8:	09 f4       	brne	.+2      	; 0x8fc <vfprintf+0x3a0>
 8fa:	42 ce       	rjmp	.-892    	; 0x580 <vfprintf+0x24>
 8fc:	b6 01       	movw	r22, r12
 8fe:	80 e2       	ldi	r24, 0x20	; 32
 900:	90 e0       	ldi	r25, 0x00	; 0
 902:	0e 94 a5 04 	call	0x94a	; 0x94a <fputc>
 906:	2a 94       	dec	r2
 908:	f6 cf       	rjmp	.-20     	; 0x8f6 <vfprintf+0x39a>
 90a:	f6 01       	movw	r30, r12
 90c:	86 81       	ldd	r24, Z+6	; 0x06
 90e:	97 81       	ldd	r25, Z+7	; 0x07
 910:	02 c0       	rjmp	.+4      	; 0x916 <__stack+0x17>
 912:	8f ef       	ldi	r24, 0xFF	; 255
 914:	9f ef       	ldi	r25, 0xFF	; 255
 916:	2b 96       	adiw	r28, 0x0b	; 11
 918:	e2 e1       	ldi	r30, 0x12	; 18
 91a:	0c 94 5b 05 	jmp	0xab6	; 0xab6 <__epilogue_restores__>

0000091e <strnlen_P>:
 91e:	fc 01       	movw	r30, r24
 920:	05 90       	lpm	r0, Z+
 922:	61 50       	subi	r22, 0x01	; 1
 924:	70 40       	sbci	r23, 0x00	; 0
 926:	01 10       	cpse	r0, r1
 928:	d8 f7       	brcc	.-10     	; 0x920 <strnlen_P+0x2>
 92a:	80 95       	com	r24
 92c:	90 95       	com	r25
 92e:	8e 0f       	add	r24, r30
 930:	9f 1f       	adc	r25, r31
 932:	08 95       	ret

00000934 <strnlen>:
 934:	fc 01       	movw	r30, r24
 936:	61 50       	subi	r22, 0x01	; 1
 938:	70 40       	sbci	r23, 0x00	; 0
 93a:	01 90       	ld	r0, Z+
 93c:	01 10       	cpse	r0, r1
 93e:	d8 f7       	brcc	.-10     	; 0x936 <strnlen+0x2>
 940:	80 95       	com	r24
 942:	90 95       	com	r25
 944:	8e 0f       	add	r24, r30
 946:	9f 1f       	adc	r25, r31
 948:	08 95       	ret

0000094a <fputc>:
 94a:	0f 93       	push	r16
 94c:	1f 93       	push	r17
 94e:	cf 93       	push	r28
 950:	df 93       	push	r29
 952:	fb 01       	movw	r30, r22
 954:	23 81       	ldd	r18, Z+3	; 0x03
 956:	21 fd       	sbrc	r18, 1
 958:	03 c0       	rjmp	.+6      	; 0x960 <fputc+0x16>
 95a:	8f ef       	ldi	r24, 0xFF	; 255
 95c:	9f ef       	ldi	r25, 0xFF	; 255
 95e:	2c c0       	rjmp	.+88     	; 0x9b8 <fputc+0x6e>
 960:	22 ff       	sbrs	r18, 2
 962:	16 c0       	rjmp	.+44     	; 0x990 <fputc+0x46>
 964:	46 81       	ldd	r20, Z+6	; 0x06
 966:	57 81       	ldd	r21, Z+7	; 0x07
 968:	24 81       	ldd	r18, Z+4	; 0x04
 96a:	35 81       	ldd	r19, Z+5	; 0x05
 96c:	42 17       	cp	r20, r18
 96e:	53 07       	cpc	r21, r19
 970:	44 f4       	brge	.+16     	; 0x982 <fputc+0x38>
 972:	a0 81       	ld	r26, Z
 974:	b1 81       	ldd	r27, Z+1	; 0x01
 976:	9d 01       	movw	r18, r26
 978:	2f 5f       	subi	r18, 0xFF	; 255
 97a:	3f 4f       	sbci	r19, 0xFF	; 255
 97c:	31 83       	std	Z+1, r19	; 0x01
 97e:	20 83       	st	Z, r18
 980:	8c 93       	st	X, r24
 982:	26 81       	ldd	r18, Z+6	; 0x06
 984:	37 81       	ldd	r19, Z+7	; 0x07
 986:	2f 5f       	subi	r18, 0xFF	; 255
 988:	3f 4f       	sbci	r19, 0xFF	; 255
 98a:	37 83       	std	Z+7, r19	; 0x07
 98c:	26 83       	std	Z+6, r18	; 0x06
 98e:	14 c0       	rjmp	.+40     	; 0x9b8 <fputc+0x6e>
 990:	8b 01       	movw	r16, r22
 992:	ec 01       	movw	r28, r24
 994:	fb 01       	movw	r30, r22
 996:	00 84       	ldd	r0, Z+8	; 0x08
 998:	f1 85       	ldd	r31, Z+9	; 0x09
 99a:	e0 2d       	mov	r30, r0
 99c:	09 95       	icall
 99e:	89 2b       	or	r24, r25
 9a0:	e1 f6       	brne	.-72     	; 0x95a <fputc+0x10>
 9a2:	d8 01       	movw	r26, r16
 9a4:	16 96       	adiw	r26, 0x06	; 6
 9a6:	8d 91       	ld	r24, X+
 9a8:	9c 91       	ld	r25, X
 9aa:	17 97       	sbiw	r26, 0x07	; 7
 9ac:	01 96       	adiw	r24, 0x01	; 1
 9ae:	17 96       	adiw	r26, 0x07	; 7
 9b0:	9c 93       	st	X, r25
 9b2:	8e 93       	st	-X, r24
 9b4:	16 97       	sbiw	r26, 0x06	; 6
 9b6:	ce 01       	movw	r24, r28
 9b8:	df 91       	pop	r29
 9ba:	cf 91       	pop	r28
 9bc:	1f 91       	pop	r17
 9be:	0f 91       	pop	r16
 9c0:	08 95       	ret

000009c2 <__ultoa_invert>:
 9c2:	fa 01       	movw	r30, r20
 9c4:	aa 27       	eor	r26, r26
 9c6:	28 30       	cpi	r18, 0x08	; 8
 9c8:	51 f1       	breq	.+84     	; 0xa1e <__ultoa_invert+0x5c>
 9ca:	20 31       	cpi	r18, 0x10	; 16
 9cc:	81 f1       	breq	.+96     	; 0xa2e <__ultoa_invert+0x6c>
 9ce:	e8 94       	clt
 9d0:	6f 93       	push	r22
 9d2:	6e 7f       	andi	r22, 0xFE	; 254
 9d4:	6e 5f       	subi	r22, 0xFE	; 254
 9d6:	7f 4f       	sbci	r23, 0xFF	; 255
 9d8:	8f 4f       	sbci	r24, 0xFF	; 255
 9da:	9f 4f       	sbci	r25, 0xFF	; 255
 9dc:	af 4f       	sbci	r26, 0xFF	; 255
 9de:	b1 e0       	ldi	r27, 0x01	; 1
 9e0:	3e d0       	rcall	.+124    	; 0xa5e <__ultoa_invert+0x9c>
 9e2:	b4 e0       	ldi	r27, 0x04	; 4
 9e4:	3c d0       	rcall	.+120    	; 0xa5e <__ultoa_invert+0x9c>
 9e6:	67 0f       	add	r22, r23
 9e8:	78 1f       	adc	r23, r24
 9ea:	89 1f       	adc	r24, r25
 9ec:	9a 1f       	adc	r25, r26
 9ee:	a1 1d       	adc	r26, r1
 9f0:	68 0f       	add	r22, r24
 9f2:	79 1f       	adc	r23, r25
 9f4:	8a 1f       	adc	r24, r26
 9f6:	91 1d       	adc	r25, r1
 9f8:	a1 1d       	adc	r26, r1
 9fa:	6a 0f       	add	r22, r26
 9fc:	71 1d       	adc	r23, r1
 9fe:	81 1d       	adc	r24, r1
 a00:	91 1d       	adc	r25, r1
 a02:	a1 1d       	adc	r26, r1
 a04:	20 d0       	rcall	.+64     	; 0xa46 <__ultoa_invert+0x84>
 a06:	09 f4       	brne	.+2      	; 0xa0a <__ultoa_invert+0x48>
 a08:	68 94       	set
 a0a:	3f 91       	pop	r19
 a0c:	2a e0       	ldi	r18, 0x0A	; 10
 a0e:	26 9f       	mul	r18, r22
 a10:	11 24       	eor	r1, r1
 a12:	30 19       	sub	r19, r0
 a14:	30 5d       	subi	r19, 0xD0	; 208
 a16:	31 93       	st	Z+, r19
 a18:	de f6       	brtc	.-74     	; 0x9d0 <__ultoa_invert+0xe>
 a1a:	cf 01       	movw	r24, r30
 a1c:	08 95       	ret
 a1e:	46 2f       	mov	r20, r22
 a20:	47 70       	andi	r20, 0x07	; 7
 a22:	40 5d       	subi	r20, 0xD0	; 208
 a24:	41 93       	st	Z+, r20
 a26:	b3 e0       	ldi	r27, 0x03	; 3
 a28:	0f d0       	rcall	.+30     	; 0xa48 <__ultoa_invert+0x86>
 a2a:	c9 f7       	brne	.-14     	; 0xa1e <__ultoa_invert+0x5c>
 a2c:	f6 cf       	rjmp	.-20     	; 0xa1a <__ultoa_invert+0x58>
 a2e:	46 2f       	mov	r20, r22
 a30:	4f 70       	andi	r20, 0x0F	; 15
 a32:	40 5d       	subi	r20, 0xD0	; 208
 a34:	4a 33       	cpi	r20, 0x3A	; 58
 a36:	18 f0       	brcs	.+6      	; 0xa3e <__ultoa_invert+0x7c>
 a38:	49 5d       	subi	r20, 0xD9	; 217
 a3a:	31 fd       	sbrc	r19, 1
 a3c:	40 52       	subi	r20, 0x20	; 32
 a3e:	41 93       	st	Z+, r20
 a40:	02 d0       	rcall	.+4      	; 0xa46 <__ultoa_invert+0x84>
 a42:	a9 f7       	brne	.-22     	; 0xa2e <__ultoa_invert+0x6c>
 a44:	ea cf       	rjmp	.-44     	; 0xa1a <__ultoa_invert+0x58>
 a46:	b4 e0       	ldi	r27, 0x04	; 4
 a48:	a6 95       	lsr	r26
 a4a:	97 95       	ror	r25
 a4c:	87 95       	ror	r24
 a4e:	77 95       	ror	r23
 a50:	67 95       	ror	r22
 a52:	ba 95       	dec	r27
 a54:	c9 f7       	brne	.-14     	; 0xa48 <__ultoa_invert+0x86>
 a56:	00 97       	sbiw	r24, 0x00	; 0
 a58:	61 05       	cpc	r22, r1
 a5a:	71 05       	cpc	r23, r1
 a5c:	08 95       	ret
 a5e:	9b 01       	movw	r18, r22
 a60:	ac 01       	movw	r20, r24
 a62:	0a 2e       	mov	r0, r26
 a64:	06 94       	lsr	r0
 a66:	57 95       	ror	r21
 a68:	47 95       	ror	r20
 a6a:	37 95       	ror	r19
 a6c:	27 95       	ror	r18
 a6e:	ba 95       	dec	r27
 a70:	c9 f7       	brne	.-14     	; 0xa64 <__ultoa_invert+0xa2>
 a72:	62 0f       	add	r22, r18
 a74:	73 1f       	adc	r23, r19
 a76:	84 1f       	adc	r24, r20
 a78:	95 1f       	adc	r25, r21
 a7a:	a0 1d       	adc	r26, r0
 a7c:	08 95       	ret

00000a7e <__prologue_saves__>:
 a7e:	2f 92       	push	r2
 a80:	3f 92       	push	r3
 a82:	4f 92       	push	r4
 a84:	5f 92       	push	r5
 a86:	6f 92       	push	r6
 a88:	7f 92       	push	r7
 a8a:	8f 92       	push	r8
 a8c:	9f 92       	push	r9
 a8e:	af 92       	push	r10
 a90:	bf 92       	push	r11
 a92:	cf 92       	push	r12
 a94:	df 92       	push	r13
 a96:	ef 92       	push	r14
 a98:	ff 92       	push	r15
 a9a:	0f 93       	push	r16
 a9c:	1f 93       	push	r17
 a9e:	cf 93       	push	r28
 aa0:	df 93       	push	r29
 aa2:	cd b7       	in	r28, 0x3d	; 61
 aa4:	de b7       	in	r29, 0x3e	; 62
 aa6:	ca 1b       	sub	r28, r26
 aa8:	db 0b       	sbc	r29, r27
 aaa:	0f b6       	in	r0, 0x3f	; 63
 aac:	f8 94       	cli
 aae:	de bf       	out	0x3e, r29	; 62
 ab0:	0f be       	out	0x3f, r0	; 63
 ab2:	cd bf       	out	0x3d, r28	; 61
 ab4:	09 94       	ijmp

00000ab6 <__epilogue_restores__>:
 ab6:	2a 88       	ldd	r2, Y+18	; 0x12
 ab8:	39 88       	ldd	r3, Y+17	; 0x11
 aba:	48 88       	ldd	r4, Y+16	; 0x10
 abc:	5f 84       	ldd	r5, Y+15	; 0x0f
 abe:	6e 84       	ldd	r6, Y+14	; 0x0e
 ac0:	7d 84       	ldd	r7, Y+13	; 0x0d
 ac2:	8c 84       	ldd	r8, Y+12	; 0x0c
 ac4:	9b 84       	ldd	r9, Y+11	; 0x0b
 ac6:	aa 84       	ldd	r10, Y+10	; 0x0a
 ac8:	b9 84       	ldd	r11, Y+9	; 0x09
 aca:	c8 84       	ldd	r12, Y+8	; 0x08
 acc:	df 80       	ldd	r13, Y+7	; 0x07
 ace:	ee 80       	ldd	r14, Y+6	; 0x06
 ad0:	fd 80       	ldd	r15, Y+5	; 0x05
 ad2:	0c 81       	ldd	r16, Y+4	; 0x04
 ad4:	1b 81       	ldd	r17, Y+3	; 0x03
 ad6:	aa 81       	ldd	r26, Y+2	; 0x02
 ad8:	b9 81       	ldd	r27, Y+1	; 0x01
 ada:	ce 0f       	add	r28, r30
 adc:	d1 1d       	adc	r29, r1
 ade:	0f b6       	in	r0, 0x3f	; 63
 ae0:	f8 94       	cli
 ae2:	de bf       	out	0x3e, r29	; 62
 ae4:	0f be       	out	0x3f, r0	; 63
 ae6:	cd bf       	out	0x3d, r28	; 61
 ae8:	ed 01       	movw	r28, r26
 aea:	08 95       	ret

00000aec <_exit>:
 aec:	f8 94       	cli

00000aee <__stop_program>:
 aee:	ff cf       	rjmp	.-2      	; 0xaee <__stop_program>
