
DA4BT2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  00000aec  00000b80  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000aec  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080012a  0080012a  00000baa  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000baa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c08  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00000c48  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000937  00000000  00000000  00000c98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007ce  00000000  00000000  000015cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003a9  00000000  00000000  00001d9d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a0  00000000  00000000  00002148  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000431  00000000  00000000  000021e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000113  00000000  00000000  00002619  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  0000272c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec ee       	ldi	r30, 0xEC	; 236
  7c:	fa e0       	ldi	r31, 0x0A	; 10
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 32       	cpi	r26, 0x2A	; 42
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e2       	ldi	r26, 0x2A	; 42
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 33       	cpi	r26, 0x30	; 48
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 99 00 	call	0x132	; 0x132 <main>
  9e:	0c 94 74 05 	jmp	0xae8	; 0xae8 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <USART0_sendChar>:
 * since the _delay_ms macro will not accept parameters 
 * other than constant values. 
 */
{
	int i;
	for(i = 0; i < count; i++)
  a6:	8a 30       	cpi	r24, 0x0A	; 10
  a8:	41 f4       	brne	.+16     	; 0xba <USART0_sendChar+0x14>
  aa:	e0 ec       	ldi	r30, 0xC0	; 192
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	90 81       	ld	r25, Z
  b0:	95 ff       	sbrs	r25, 5
  b2:	fd cf       	rjmp	.-6      	; 0xae <USART0_sendChar+0x8>
  b4:	9d e0       	ldi	r25, 0x0D	; 13
  b6:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  ba:	e0 ec       	ldi	r30, 0xC0	; 192
  bc:	f0 e0       	ldi	r31, 0x00	; 0
  be:	90 81       	ld	r25, Z
  c0:	95 ff       	sbrs	r25, 5
  c2:	fd cf       	rjmp	.-6      	; 0xbe <USART0_sendChar+0x18>
  c4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
  c8:	80 e0       	ldi	r24, 0x00	; 0
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	08 95       	ret

000000ce <usart0_init>:
  ce:	88 e1       	ldi	r24, 0x18	; 24
  d0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
  d4:	86 e0       	ldi	r24, 0x06	; 6
  d6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  da:	83 e3       	ldi	r24, 0x33	; 51
  dc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
  e0:	08 95       	ret

000000e2 <readADC>:
  e2:	ea e7       	ldi	r30, 0x7A	; 122
  e4:	f0 e0       	ldi	r31, 0x00	; 0
  e6:	80 81       	ld	r24, Z
  e8:	80 64       	ori	r24, 0x40	; 64
  ea:	80 83       	st	Z, r24
  ec:	80 81       	ld	r24, Z
  ee:	84 ff       	sbrs	r24, 4
  f0:	fd cf       	rjmp	.-6      	; 0xec <readADC+0xa>
  f2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
  f6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
  fa:	08 95       	ret

000000fc <ADC0init>:
  fc:	87 b1       	in	r24, 0x07	; 7
  fe:	87 b9       	out	0x07, r24	; 7
 100:	87 e8       	ldi	r24, 0x87	; 135
 102:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 106:	80 e4       	ldi	r24, 0x40	; 64
 108:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 10c:	08 95       	ret

0000010e <PWM_OC1A_init>:
}

void PWM_OC1A_init()
{
	//Set PORTB1 pin as output
	DDRB |= (1<<DDB1);	// make OC1A as output.
 10e:	21 9a       	sbi	0x04, 1	; 4
	// Output compare mode on OC1A. Fast PWM with top = ICR1.
	// Clear OC1A on Compare match and set at bottom.
	TCCR1A |= (1<<COM1A1)|(0<<COM1A0)|(0<<COM1B1)|(0<<COM1B0)|(0<<FOC1A)|(0<<FOC1B)|(1<<WGM11)|(0<<WGM10);
 110:	e0 e8       	ldi	r30, 0x80	; 128
 112:	f0 e0       	ldi	r31, 0x00	; 0
 114:	80 81       	ld	r24, Z
 116:	82 68       	ori	r24, 0x82	; 130
 118:	80 83       	st	Z, r24
	// Start timer with prescaler 64
	TCCR1B |= (0<<ICNC1)|(0<<ICES1)|(1<<WGM13)|(1<<WGM12)|(0<<CS12)|(1<<CS11)|(1<<CS10);
 11a:	e1 e8       	ldi	r30, 0x81	; 129
 11c:	f0 e0       	ldi	r31, 0x00	; 0
 11e:	80 81       	ld	r24, Z
 120:	8b 61       	ori	r24, 0x1B	; 27
 122:	80 83       	st	Z, r24
	ICR1 = 2499;  // F_CPU / (N * F_pwm) - 1, where N is the prescaler = 64, and F_pwm is the desired 50Hz frequency.
 124:	83 ec       	ldi	r24, 0xC3	; 195
 126:	99 e0       	ldi	r25, 0x09	; 9
 128:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
 12c:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
 130:	08 95       	ret

00000132 <main>:

int main()
{
 	unsigned short adcVal;	// Variable to store input ADC Value
	unsigned short newVal;	// new value calculated based on a range for servo
	DDRB = 0xFF; // make portB output pins.
 132:	8f ef       	ldi	r24, 0xFF	; 255
 134:	84 b9       	out	0x04, r24	; 4

	ADC0init();			// Initialize ADC0 input
 136:	0e 94 7e 00 	call	0xfc	; 0xfc <ADC0init>
	PWM_OC1A_init();	// initialize pwm  on OC1A
 13a:	0e 94 87 00 	call	0x10e	; 0x10e <PWM_OC1A_init>
	usart0_init();		// Initialize USART0 for debugging and monitoring
 13e:	0e 94 67 00 	call	0xce	; 0xce <usart0_init>
	
	stdout = & USART0_stream;	// change standard output to point to a USART stream
 142:	80 e0       	ldi	r24, 0x00	; 0
 144:	91 e0       	ldi	r25, 0x01	; 1
 146:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <__data_end+0x3>
 14a:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <__data_end+0x2>
	while (1)
	{
 		adcVal = readADC();			// read ADC0;
		// Map ADC value to a range from 0 to SERVO_MAX
		newVal = (unsigned short)((float)adcVal / ((1UL<<10) - 1) * SERVO_MAX);
		printf("adcVal = %u\n", adcVal);	// Print monitoring data
 14e:	0f 2e       	mov	r0, r31
 150:	fe e0       	ldi	r31, 0x0E	; 14
 152:	ef 2e       	mov	r14, r31
 154:	f1 e0       	ldi	r31, 0x01	; 1
 156:	ff 2e       	mov	r15, r31
 158:	f0 2d       	mov	r31, r0
		printf("\tnewVal = %u\n", newVal);
 15a:	0b e1       	ldi	r16, 0x1B	; 27
 15c:	11 e0       	ldi	r17, 0x01	; 1
		if (newVal <= SERVO_MIN)	// If newVal is less than minimum servo value (0 degrees)
			OCR1A = SERVO_MIN;		// then set OCR1A to minimum value.
		else
		{
			OCR1A = newVal;			// else, update OCR1A to change duty cycle.
 15e:	0f 2e       	mov	r0, r31
 160:	f8 e8       	ldi	r31, 0x88	; 136
 162:	6f 2e       	mov	r6, r31
 164:	71 2c       	mov	r7, r1
 166:	f0 2d       	mov	r31, r0
		// Map ADC value to a range from 0 to SERVO_MAX
		newVal = (unsigned short)((float)adcVal / ((1UL<<10) - 1) * SERVO_MAX);
		printf("adcVal = %u\n", adcVal);	// Print monitoring data
		printf("\tnewVal = %u\n", newVal);
		if (newVal <= SERVO_MIN)	// If newVal is less than minimum servo value (0 degrees)
			OCR1A = SERVO_MIN;		// then set OCR1A to minimum value.
 168:	0f 2e       	mov	r0, r31
 16a:	f1 e4       	ldi	r31, 0x41	; 65
 16c:	4f 2e       	mov	r4, r31
 16e:	51 2c       	mov	r5, r1
 170:	f0 2d       	mov	r31, r0
	
	stdout = & USART0_stream;	// change standard output to point to a USART stream
	
	while (1)
	{
 		adcVal = readADC();			// read ADC0;
 172:	0e 94 71 00 	call	0xe2	; 0xe2 <readADC>
 176:	ec 01       	movw	r28, r24
		// Map ADC value to a range from 0 to SERVO_MAX
		newVal = (unsigned short)((float)adcVal / ((1UL<<10) - 1) * SERVO_MAX);
 178:	bc 01       	movw	r22, r24
 17a:	80 e0       	ldi	r24, 0x00	; 0
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	0e 94 9b 01 	call	0x336	; 0x336 <__floatunsisf>
 182:	20 e0       	ldi	r18, 0x00	; 0
 184:	30 ec       	ldi	r19, 0xC0	; 192
 186:	4f e7       	ldi	r20, 0x7F	; 127
 188:	54 e4       	ldi	r21, 0x44	; 68
 18a:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <__divsf3>
 18e:	20 e0       	ldi	r18, 0x00	; 0
 190:	30 e8       	ldi	r19, 0x80	; 128
 192:	4e e8       	ldi	r20, 0x8E	; 142
 194:	53 e4       	ldi	r21, 0x43	; 67
 196:	0e 94 29 02 	call	0x452	; 0x452 <__mulsf3>
 19a:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <__fixunssfsi>
 19e:	4b 01       	movw	r8, r22
 1a0:	5c 01       	movw	r10, r24
		printf("adcVal = %u\n", adcVal);	// Print monitoring data
 1a2:	df 93       	push	r29
 1a4:	cf 93       	push	r28
 1a6:	ff 92       	push	r15
 1a8:	ef 92       	push	r14
 1aa:	0e 94 96 02 	call	0x52c	; 0x52c <printf>
		printf("\tnewVal = %u\n", newVal);
 1ae:	9f 92       	push	r9
 1b0:	8f 92       	push	r8
 1b2:	1f 93       	push	r17
 1b4:	0f 93       	push	r16
 1b6:	0e 94 96 02 	call	0x52c	; 0x52c <printf>
		if (newVal <= SERVO_MIN)	// If newVal is less than minimum servo value (0 degrees)
 1ba:	ed b7       	in	r30, 0x3d	; 61
 1bc:	fe b7       	in	r31, 0x3e	; 62
 1be:	38 96       	adiw	r30, 0x08	; 8
 1c0:	0f b6       	in	r0, 0x3f	; 63
 1c2:	f8 94       	cli
 1c4:	fe bf       	out	0x3e, r31	; 62
 1c6:	0f be       	out	0x3f, r0	; 63
 1c8:	ed bf       	out	0x3d, r30	; 61
 1ca:	f2 e4       	ldi	r31, 0x42	; 66
 1cc:	8f 16       	cp	r8, r31
 1ce:	91 04       	cpc	r9, r1
 1d0:	20 f4       	brcc	.+8      	; 0x1da <main+0xa8>
			OCR1A = SERVO_MIN;		// then set OCR1A to minimum value.
 1d2:	f3 01       	movw	r30, r6
 1d4:	51 82       	std	Z+1, r5	; 0x01
 1d6:	40 82       	st	Z, r4
 1d8:	03 c0       	rjmp	.+6      	; 0x1e0 <main+0xae>
		else
		{
			OCR1A = newVal;			// else, update OCR1A to change duty cycle.
 1da:	f3 01       	movw	r30, r6
 1dc:	91 82       	std	Z+1, r9	; 0x01
 1de:	80 82       	st	Z, r8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1e0:	ff e7       	ldi	r31, 0x7F	; 127
 1e2:	28 e3       	ldi	r18, 0x38	; 56
 1e4:	81 e0       	ldi	r24, 0x01	; 1
 1e6:	f1 50       	subi	r31, 0x01	; 1
 1e8:	20 40       	sbci	r18, 0x00	; 0
 1ea:	80 40       	sbci	r24, 0x00	; 0
 1ec:	e1 f7       	brne	.-8      	; 0x1e6 <main+0xb4>
 1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <main+0xbe>
 1f0:	00 00       	nop
 1f2:	bf cf       	rjmp	.-130    	; 0x172 <main+0x40>

000001f4 <__divsf3>:
 1f4:	0e 94 0e 01 	call	0x21c	; 0x21c <__divsf3x>
 1f8:	0c 94 ef 01 	jmp	0x3de	; 0x3de <__fp_round>
 1fc:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <__fp_pscB>
 200:	58 f0       	brcs	.+22     	; 0x218 <__divsf3+0x24>
 202:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <__fp_pscA>
 206:	40 f0       	brcs	.+16     	; 0x218 <__divsf3+0x24>
 208:	29 f4       	brne	.+10     	; 0x214 <__divsf3+0x20>
 20a:	5f 3f       	cpi	r21, 0xFF	; 255
 20c:	29 f0       	breq	.+10     	; 0x218 <__divsf3+0x24>
 20e:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__fp_inf>
 212:	51 11       	cpse	r21, r1
 214:	0c 94 23 02 	jmp	0x446	; 0x446 <__fp_szero>
 218:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__fp_nan>

0000021c <__divsf3x>:
 21c:	0e 94 00 02 	call	0x400	; 0x400 <__fp_split3>
 220:	68 f3       	brcs	.-38     	; 0x1fc <__divsf3+0x8>

00000222 <__divsf3_pse>:
 222:	99 23       	and	r25, r25
 224:	b1 f3       	breq	.-20     	; 0x212 <__divsf3+0x1e>
 226:	55 23       	and	r21, r21
 228:	91 f3       	breq	.-28     	; 0x20e <__divsf3+0x1a>
 22a:	95 1b       	sub	r25, r21
 22c:	55 0b       	sbc	r21, r21
 22e:	bb 27       	eor	r27, r27
 230:	aa 27       	eor	r26, r26
 232:	62 17       	cp	r22, r18
 234:	73 07       	cpc	r23, r19
 236:	84 07       	cpc	r24, r20
 238:	38 f0       	brcs	.+14     	; 0x248 <__divsf3_pse+0x26>
 23a:	9f 5f       	subi	r25, 0xFF	; 255
 23c:	5f 4f       	sbci	r21, 0xFF	; 255
 23e:	22 0f       	add	r18, r18
 240:	33 1f       	adc	r19, r19
 242:	44 1f       	adc	r20, r20
 244:	aa 1f       	adc	r26, r26
 246:	a9 f3       	breq	.-22     	; 0x232 <__divsf3_pse+0x10>
 248:	35 d0       	rcall	.+106    	; 0x2b4 <__divsf3_pse+0x92>
 24a:	0e 2e       	mov	r0, r30
 24c:	3a f0       	brmi	.+14     	; 0x25c <__divsf3_pse+0x3a>
 24e:	e0 e8       	ldi	r30, 0x80	; 128
 250:	32 d0       	rcall	.+100    	; 0x2b6 <__divsf3_pse+0x94>
 252:	91 50       	subi	r25, 0x01	; 1
 254:	50 40       	sbci	r21, 0x00	; 0
 256:	e6 95       	lsr	r30
 258:	00 1c       	adc	r0, r0
 25a:	ca f7       	brpl	.-14     	; 0x24e <__divsf3_pse+0x2c>
 25c:	2b d0       	rcall	.+86     	; 0x2b4 <__divsf3_pse+0x92>
 25e:	fe 2f       	mov	r31, r30
 260:	29 d0       	rcall	.+82     	; 0x2b4 <__divsf3_pse+0x92>
 262:	66 0f       	add	r22, r22
 264:	77 1f       	adc	r23, r23
 266:	88 1f       	adc	r24, r24
 268:	bb 1f       	adc	r27, r27
 26a:	26 17       	cp	r18, r22
 26c:	37 07       	cpc	r19, r23
 26e:	48 07       	cpc	r20, r24
 270:	ab 07       	cpc	r26, r27
 272:	b0 e8       	ldi	r27, 0x80	; 128
 274:	09 f0       	breq	.+2      	; 0x278 <__divsf3_pse+0x56>
 276:	bb 0b       	sbc	r27, r27
 278:	80 2d       	mov	r24, r0
 27a:	bf 01       	movw	r22, r30
 27c:	ff 27       	eor	r31, r31
 27e:	93 58       	subi	r25, 0x83	; 131
 280:	5f 4f       	sbci	r21, 0xFF	; 255
 282:	3a f0       	brmi	.+14     	; 0x292 <__divsf3_pse+0x70>
 284:	9e 3f       	cpi	r25, 0xFE	; 254
 286:	51 05       	cpc	r21, r1
 288:	78 f0       	brcs	.+30     	; 0x2a8 <__divsf3_pse+0x86>
 28a:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__fp_inf>
 28e:	0c 94 23 02 	jmp	0x446	; 0x446 <__fp_szero>
 292:	5f 3f       	cpi	r21, 0xFF	; 255
 294:	e4 f3       	brlt	.-8      	; 0x28e <__divsf3_pse+0x6c>
 296:	98 3e       	cpi	r25, 0xE8	; 232
 298:	d4 f3       	brlt	.-12     	; 0x28e <__divsf3_pse+0x6c>
 29a:	86 95       	lsr	r24
 29c:	77 95       	ror	r23
 29e:	67 95       	ror	r22
 2a0:	b7 95       	ror	r27
 2a2:	f7 95       	ror	r31
 2a4:	9f 5f       	subi	r25, 0xFF	; 255
 2a6:	c9 f7       	brne	.-14     	; 0x29a <__divsf3_pse+0x78>
 2a8:	88 0f       	add	r24, r24
 2aa:	91 1d       	adc	r25, r1
 2ac:	96 95       	lsr	r25
 2ae:	87 95       	ror	r24
 2b0:	97 f9       	bld	r25, 7
 2b2:	08 95       	ret
 2b4:	e1 e0       	ldi	r30, 0x01	; 1
 2b6:	66 0f       	add	r22, r22
 2b8:	77 1f       	adc	r23, r23
 2ba:	88 1f       	adc	r24, r24
 2bc:	bb 1f       	adc	r27, r27
 2be:	62 17       	cp	r22, r18
 2c0:	73 07       	cpc	r23, r19
 2c2:	84 07       	cpc	r24, r20
 2c4:	ba 07       	cpc	r27, r26
 2c6:	20 f0       	brcs	.+8      	; 0x2d0 <__divsf3_pse+0xae>
 2c8:	62 1b       	sub	r22, r18
 2ca:	73 0b       	sbc	r23, r19
 2cc:	84 0b       	sbc	r24, r20
 2ce:	ba 0b       	sbc	r27, r26
 2d0:	ee 1f       	adc	r30, r30
 2d2:	88 f7       	brcc	.-30     	; 0x2b6 <__divsf3_pse+0x94>
 2d4:	e0 95       	com	r30
 2d6:	08 95       	ret

000002d8 <__fixunssfsi>:
 2d8:	0e 94 08 02 	call	0x410	; 0x410 <__fp_splitA>
 2dc:	88 f0       	brcs	.+34     	; 0x300 <__fixunssfsi+0x28>
 2de:	9f 57       	subi	r25, 0x7F	; 127
 2e0:	98 f0       	brcs	.+38     	; 0x308 <__fixunssfsi+0x30>
 2e2:	b9 2f       	mov	r27, r25
 2e4:	99 27       	eor	r25, r25
 2e6:	b7 51       	subi	r27, 0x17	; 23
 2e8:	b0 f0       	brcs	.+44     	; 0x316 <__fixunssfsi+0x3e>
 2ea:	e1 f0       	breq	.+56     	; 0x324 <__fixunssfsi+0x4c>
 2ec:	66 0f       	add	r22, r22
 2ee:	77 1f       	adc	r23, r23
 2f0:	88 1f       	adc	r24, r24
 2f2:	99 1f       	adc	r25, r25
 2f4:	1a f0       	brmi	.+6      	; 0x2fc <__fixunssfsi+0x24>
 2f6:	ba 95       	dec	r27
 2f8:	c9 f7       	brne	.-14     	; 0x2ec <__fixunssfsi+0x14>
 2fa:	14 c0       	rjmp	.+40     	; 0x324 <__fixunssfsi+0x4c>
 2fc:	b1 30       	cpi	r27, 0x01	; 1
 2fe:	91 f0       	breq	.+36     	; 0x324 <__fixunssfsi+0x4c>
 300:	0e 94 22 02 	call	0x444	; 0x444 <__fp_zero>
 304:	b1 e0       	ldi	r27, 0x01	; 1
 306:	08 95       	ret
 308:	0c 94 22 02 	jmp	0x444	; 0x444 <__fp_zero>
 30c:	67 2f       	mov	r22, r23
 30e:	78 2f       	mov	r23, r24
 310:	88 27       	eor	r24, r24
 312:	b8 5f       	subi	r27, 0xF8	; 248
 314:	39 f0       	breq	.+14     	; 0x324 <__fixunssfsi+0x4c>
 316:	b9 3f       	cpi	r27, 0xF9	; 249
 318:	cc f3       	brlt	.-14     	; 0x30c <__fixunssfsi+0x34>
 31a:	86 95       	lsr	r24
 31c:	77 95       	ror	r23
 31e:	67 95       	ror	r22
 320:	b3 95       	inc	r27
 322:	d9 f7       	brne	.-10     	; 0x31a <__fixunssfsi+0x42>
 324:	3e f4       	brtc	.+14     	; 0x334 <__fixunssfsi+0x5c>
 326:	90 95       	com	r25
 328:	80 95       	com	r24
 32a:	70 95       	com	r23
 32c:	61 95       	neg	r22
 32e:	7f 4f       	sbci	r23, 0xFF	; 255
 330:	8f 4f       	sbci	r24, 0xFF	; 255
 332:	9f 4f       	sbci	r25, 0xFF	; 255
 334:	08 95       	ret

00000336 <__floatunsisf>:
 336:	e8 94       	clt
 338:	09 c0       	rjmp	.+18     	; 0x34c <__floatsisf+0x12>

0000033a <__floatsisf>:
 33a:	97 fb       	bst	r25, 7
 33c:	3e f4       	brtc	.+14     	; 0x34c <__floatsisf+0x12>
 33e:	90 95       	com	r25
 340:	80 95       	com	r24
 342:	70 95       	com	r23
 344:	61 95       	neg	r22
 346:	7f 4f       	sbci	r23, 0xFF	; 255
 348:	8f 4f       	sbci	r24, 0xFF	; 255
 34a:	9f 4f       	sbci	r25, 0xFF	; 255
 34c:	99 23       	and	r25, r25
 34e:	a9 f0       	breq	.+42     	; 0x37a <__floatsisf+0x40>
 350:	f9 2f       	mov	r31, r25
 352:	96 e9       	ldi	r25, 0x96	; 150
 354:	bb 27       	eor	r27, r27
 356:	93 95       	inc	r25
 358:	f6 95       	lsr	r31
 35a:	87 95       	ror	r24
 35c:	77 95       	ror	r23
 35e:	67 95       	ror	r22
 360:	b7 95       	ror	r27
 362:	f1 11       	cpse	r31, r1
 364:	f8 cf       	rjmp	.-16     	; 0x356 <__floatsisf+0x1c>
 366:	fa f4       	brpl	.+62     	; 0x3a6 <__floatsisf+0x6c>
 368:	bb 0f       	add	r27, r27
 36a:	11 f4       	brne	.+4      	; 0x370 <__floatsisf+0x36>
 36c:	60 ff       	sbrs	r22, 0
 36e:	1b c0       	rjmp	.+54     	; 0x3a6 <__floatsisf+0x6c>
 370:	6f 5f       	subi	r22, 0xFF	; 255
 372:	7f 4f       	sbci	r23, 0xFF	; 255
 374:	8f 4f       	sbci	r24, 0xFF	; 255
 376:	9f 4f       	sbci	r25, 0xFF	; 255
 378:	16 c0       	rjmp	.+44     	; 0x3a6 <__floatsisf+0x6c>
 37a:	88 23       	and	r24, r24
 37c:	11 f0       	breq	.+4      	; 0x382 <__floatsisf+0x48>
 37e:	96 e9       	ldi	r25, 0x96	; 150
 380:	11 c0       	rjmp	.+34     	; 0x3a4 <__floatsisf+0x6a>
 382:	77 23       	and	r23, r23
 384:	21 f0       	breq	.+8      	; 0x38e <__floatsisf+0x54>
 386:	9e e8       	ldi	r25, 0x8E	; 142
 388:	87 2f       	mov	r24, r23
 38a:	76 2f       	mov	r23, r22
 38c:	05 c0       	rjmp	.+10     	; 0x398 <__floatsisf+0x5e>
 38e:	66 23       	and	r22, r22
 390:	71 f0       	breq	.+28     	; 0x3ae <__floatsisf+0x74>
 392:	96 e8       	ldi	r25, 0x86	; 134
 394:	86 2f       	mov	r24, r22
 396:	70 e0       	ldi	r23, 0x00	; 0
 398:	60 e0       	ldi	r22, 0x00	; 0
 39a:	2a f0       	brmi	.+10     	; 0x3a6 <__floatsisf+0x6c>
 39c:	9a 95       	dec	r25
 39e:	66 0f       	add	r22, r22
 3a0:	77 1f       	adc	r23, r23
 3a2:	88 1f       	adc	r24, r24
 3a4:	da f7       	brpl	.-10     	; 0x39c <__floatsisf+0x62>
 3a6:	88 0f       	add	r24, r24
 3a8:	96 95       	lsr	r25
 3aa:	87 95       	ror	r24
 3ac:	97 f9       	bld	r25, 7
 3ae:	08 95       	ret

000003b0 <__fp_inf>:
 3b0:	97 f9       	bld	r25, 7
 3b2:	9f 67       	ori	r25, 0x7F	; 127
 3b4:	80 e8       	ldi	r24, 0x80	; 128
 3b6:	70 e0       	ldi	r23, 0x00	; 0
 3b8:	60 e0       	ldi	r22, 0x00	; 0
 3ba:	08 95       	ret

000003bc <__fp_nan>:
 3bc:	9f ef       	ldi	r25, 0xFF	; 255
 3be:	80 ec       	ldi	r24, 0xC0	; 192
 3c0:	08 95       	ret

000003c2 <__fp_pscA>:
 3c2:	00 24       	eor	r0, r0
 3c4:	0a 94       	dec	r0
 3c6:	16 16       	cp	r1, r22
 3c8:	17 06       	cpc	r1, r23
 3ca:	18 06       	cpc	r1, r24
 3cc:	09 06       	cpc	r0, r25
 3ce:	08 95       	ret

000003d0 <__fp_pscB>:
 3d0:	00 24       	eor	r0, r0
 3d2:	0a 94       	dec	r0
 3d4:	12 16       	cp	r1, r18
 3d6:	13 06       	cpc	r1, r19
 3d8:	14 06       	cpc	r1, r20
 3da:	05 06       	cpc	r0, r21
 3dc:	08 95       	ret

000003de <__fp_round>:
 3de:	09 2e       	mov	r0, r25
 3e0:	03 94       	inc	r0
 3e2:	00 0c       	add	r0, r0
 3e4:	11 f4       	brne	.+4      	; 0x3ea <__fp_round+0xc>
 3e6:	88 23       	and	r24, r24
 3e8:	52 f0       	brmi	.+20     	; 0x3fe <__fp_round+0x20>
 3ea:	bb 0f       	add	r27, r27
 3ec:	40 f4       	brcc	.+16     	; 0x3fe <__fp_round+0x20>
 3ee:	bf 2b       	or	r27, r31
 3f0:	11 f4       	brne	.+4      	; 0x3f6 <__fp_round+0x18>
 3f2:	60 ff       	sbrs	r22, 0
 3f4:	04 c0       	rjmp	.+8      	; 0x3fe <__fp_round+0x20>
 3f6:	6f 5f       	subi	r22, 0xFF	; 255
 3f8:	7f 4f       	sbci	r23, 0xFF	; 255
 3fa:	8f 4f       	sbci	r24, 0xFF	; 255
 3fc:	9f 4f       	sbci	r25, 0xFF	; 255
 3fe:	08 95       	ret

00000400 <__fp_split3>:
 400:	57 fd       	sbrc	r21, 7
 402:	90 58       	subi	r25, 0x80	; 128
 404:	44 0f       	add	r20, r20
 406:	55 1f       	adc	r21, r21
 408:	59 f0       	breq	.+22     	; 0x420 <__fp_splitA+0x10>
 40a:	5f 3f       	cpi	r21, 0xFF	; 255
 40c:	71 f0       	breq	.+28     	; 0x42a <__fp_splitA+0x1a>
 40e:	47 95       	ror	r20

00000410 <__fp_splitA>:
 410:	88 0f       	add	r24, r24
 412:	97 fb       	bst	r25, 7
 414:	99 1f       	adc	r25, r25
 416:	61 f0       	breq	.+24     	; 0x430 <__fp_splitA+0x20>
 418:	9f 3f       	cpi	r25, 0xFF	; 255
 41a:	79 f0       	breq	.+30     	; 0x43a <__fp_splitA+0x2a>
 41c:	87 95       	ror	r24
 41e:	08 95       	ret
 420:	12 16       	cp	r1, r18
 422:	13 06       	cpc	r1, r19
 424:	14 06       	cpc	r1, r20
 426:	55 1f       	adc	r21, r21
 428:	f2 cf       	rjmp	.-28     	; 0x40e <__fp_split3+0xe>
 42a:	46 95       	lsr	r20
 42c:	f1 df       	rcall	.-30     	; 0x410 <__fp_splitA>
 42e:	08 c0       	rjmp	.+16     	; 0x440 <__fp_splitA+0x30>
 430:	16 16       	cp	r1, r22
 432:	17 06       	cpc	r1, r23
 434:	18 06       	cpc	r1, r24
 436:	99 1f       	adc	r25, r25
 438:	f1 cf       	rjmp	.-30     	; 0x41c <__fp_splitA+0xc>
 43a:	86 95       	lsr	r24
 43c:	71 05       	cpc	r23, r1
 43e:	61 05       	cpc	r22, r1
 440:	08 94       	sec
 442:	08 95       	ret

00000444 <__fp_zero>:
 444:	e8 94       	clt

00000446 <__fp_szero>:
 446:	bb 27       	eor	r27, r27
 448:	66 27       	eor	r22, r22
 44a:	77 27       	eor	r23, r23
 44c:	cb 01       	movw	r24, r22
 44e:	97 f9       	bld	r25, 7
 450:	08 95       	ret

00000452 <__mulsf3>:
 452:	0e 94 3c 02 	call	0x478	; 0x478 <__mulsf3x>
 456:	0c 94 ef 01 	jmp	0x3de	; 0x3de <__fp_round>
 45a:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <__fp_pscA>
 45e:	38 f0       	brcs	.+14     	; 0x46e <__mulsf3+0x1c>
 460:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <__fp_pscB>
 464:	20 f0       	brcs	.+8      	; 0x46e <__mulsf3+0x1c>
 466:	95 23       	and	r25, r21
 468:	11 f0       	breq	.+4      	; 0x46e <__mulsf3+0x1c>
 46a:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__fp_inf>
 46e:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__fp_nan>
 472:	11 24       	eor	r1, r1
 474:	0c 94 23 02 	jmp	0x446	; 0x446 <__fp_szero>

00000478 <__mulsf3x>:
 478:	0e 94 00 02 	call	0x400	; 0x400 <__fp_split3>
 47c:	70 f3       	brcs	.-36     	; 0x45a <__mulsf3+0x8>

0000047e <__mulsf3_pse>:
 47e:	95 9f       	mul	r25, r21
 480:	c1 f3       	breq	.-16     	; 0x472 <__mulsf3+0x20>
 482:	95 0f       	add	r25, r21
 484:	50 e0       	ldi	r21, 0x00	; 0
 486:	55 1f       	adc	r21, r21
 488:	62 9f       	mul	r22, r18
 48a:	f0 01       	movw	r30, r0
 48c:	72 9f       	mul	r23, r18
 48e:	bb 27       	eor	r27, r27
 490:	f0 0d       	add	r31, r0
 492:	b1 1d       	adc	r27, r1
 494:	63 9f       	mul	r22, r19
 496:	aa 27       	eor	r26, r26
 498:	f0 0d       	add	r31, r0
 49a:	b1 1d       	adc	r27, r1
 49c:	aa 1f       	adc	r26, r26
 49e:	64 9f       	mul	r22, r20
 4a0:	66 27       	eor	r22, r22
 4a2:	b0 0d       	add	r27, r0
 4a4:	a1 1d       	adc	r26, r1
 4a6:	66 1f       	adc	r22, r22
 4a8:	82 9f       	mul	r24, r18
 4aa:	22 27       	eor	r18, r18
 4ac:	b0 0d       	add	r27, r0
 4ae:	a1 1d       	adc	r26, r1
 4b0:	62 1f       	adc	r22, r18
 4b2:	73 9f       	mul	r23, r19
 4b4:	b0 0d       	add	r27, r0
 4b6:	a1 1d       	adc	r26, r1
 4b8:	62 1f       	adc	r22, r18
 4ba:	83 9f       	mul	r24, r19
 4bc:	a0 0d       	add	r26, r0
 4be:	61 1d       	adc	r22, r1
 4c0:	22 1f       	adc	r18, r18
 4c2:	74 9f       	mul	r23, r20
 4c4:	33 27       	eor	r19, r19
 4c6:	a0 0d       	add	r26, r0
 4c8:	61 1d       	adc	r22, r1
 4ca:	23 1f       	adc	r18, r19
 4cc:	84 9f       	mul	r24, r20
 4ce:	60 0d       	add	r22, r0
 4d0:	21 1d       	adc	r18, r1
 4d2:	82 2f       	mov	r24, r18
 4d4:	76 2f       	mov	r23, r22
 4d6:	6a 2f       	mov	r22, r26
 4d8:	11 24       	eor	r1, r1
 4da:	9f 57       	subi	r25, 0x7F	; 127
 4dc:	50 40       	sbci	r21, 0x00	; 0
 4de:	9a f0       	brmi	.+38     	; 0x506 <__mulsf3_pse+0x88>
 4e0:	f1 f0       	breq	.+60     	; 0x51e <__mulsf3_pse+0xa0>
 4e2:	88 23       	and	r24, r24
 4e4:	4a f0       	brmi	.+18     	; 0x4f8 <__mulsf3_pse+0x7a>
 4e6:	ee 0f       	add	r30, r30
 4e8:	ff 1f       	adc	r31, r31
 4ea:	bb 1f       	adc	r27, r27
 4ec:	66 1f       	adc	r22, r22
 4ee:	77 1f       	adc	r23, r23
 4f0:	88 1f       	adc	r24, r24
 4f2:	91 50       	subi	r25, 0x01	; 1
 4f4:	50 40       	sbci	r21, 0x00	; 0
 4f6:	a9 f7       	brne	.-22     	; 0x4e2 <__mulsf3_pse+0x64>
 4f8:	9e 3f       	cpi	r25, 0xFE	; 254
 4fa:	51 05       	cpc	r21, r1
 4fc:	80 f0       	brcs	.+32     	; 0x51e <__mulsf3_pse+0xa0>
 4fe:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__fp_inf>
 502:	0c 94 23 02 	jmp	0x446	; 0x446 <__fp_szero>
 506:	5f 3f       	cpi	r21, 0xFF	; 255
 508:	e4 f3       	brlt	.-8      	; 0x502 <__mulsf3_pse+0x84>
 50a:	98 3e       	cpi	r25, 0xE8	; 232
 50c:	d4 f3       	brlt	.-12     	; 0x502 <__mulsf3_pse+0x84>
 50e:	86 95       	lsr	r24
 510:	77 95       	ror	r23
 512:	67 95       	ror	r22
 514:	b7 95       	ror	r27
 516:	f7 95       	ror	r31
 518:	e7 95       	ror	r30
 51a:	9f 5f       	subi	r25, 0xFF	; 255
 51c:	c1 f7       	brne	.-16     	; 0x50e <__mulsf3_pse+0x90>
 51e:	fe 2b       	or	r31, r30
 520:	88 0f       	add	r24, r24
 522:	91 1d       	adc	r25, r1
 524:	96 95       	lsr	r25
 526:	87 95       	ror	r24
 528:	97 f9       	bld	r25, 7
 52a:	08 95       	ret

0000052c <printf>:
 52c:	a0 e0       	ldi	r26, 0x00	; 0
 52e:	b0 e0       	ldi	r27, 0x00	; 0
 530:	ec e9       	ldi	r30, 0x9C	; 156
 532:	f2 e0       	ldi	r31, 0x02	; 2
 534:	0c 94 4d 05 	jmp	0xa9a	; 0xa9a <__prologue_saves__+0x20>
 538:	ae 01       	movw	r20, r28
 53a:	4b 5f       	subi	r20, 0xFB	; 251
 53c:	5f 4f       	sbci	r21, 0xFF	; 255
 53e:	fa 01       	movw	r30, r20
 540:	61 91       	ld	r22, Z+
 542:	71 91       	ld	r23, Z+
 544:	af 01       	movw	r20, r30
 546:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <__data_end+0x2>
 54a:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <__data_end+0x3>
 54e:	0e 94 ac 02 	call	0x558	; 0x558 <vfprintf>
 552:	e2 e0       	ldi	r30, 0x02	; 2
 554:	0c 94 69 05 	jmp	0xad2	; 0xad2 <__epilogue_restores__+0x20>

00000558 <vfprintf>:
 558:	ab e0       	ldi	r26, 0x0B	; 11
 55a:	b0 e0       	ldi	r27, 0x00	; 0
 55c:	e2 eb       	ldi	r30, 0xB2	; 178
 55e:	f2 e0       	ldi	r31, 0x02	; 2
 560:	0c 94 3d 05 	jmp	0xa7a	; 0xa7a <__prologue_saves__>
 564:	6c 01       	movw	r12, r24
 566:	7b 01       	movw	r14, r22
 568:	8a 01       	movw	r16, r20
 56a:	fc 01       	movw	r30, r24
 56c:	17 82       	std	Z+7, r1	; 0x07
 56e:	16 82       	std	Z+6, r1	; 0x06
 570:	83 81       	ldd	r24, Z+3	; 0x03
 572:	81 ff       	sbrs	r24, 1
 574:	cc c1       	rjmp	.+920    	; 0x90e <__stack+0xf>
 576:	ce 01       	movw	r24, r28
 578:	01 96       	adiw	r24, 0x01	; 1
 57a:	3c 01       	movw	r6, r24
 57c:	f6 01       	movw	r30, r12
 57e:	93 81       	ldd	r25, Z+3	; 0x03
 580:	f7 01       	movw	r30, r14
 582:	93 fd       	sbrc	r25, 3
 584:	85 91       	lpm	r24, Z+
 586:	93 ff       	sbrs	r25, 3
 588:	81 91       	ld	r24, Z+
 58a:	7f 01       	movw	r14, r30
 58c:	88 23       	and	r24, r24
 58e:	09 f4       	brne	.+2      	; 0x592 <vfprintf+0x3a>
 590:	ba c1       	rjmp	.+884    	; 0x906 <__stack+0x7>
 592:	85 32       	cpi	r24, 0x25	; 37
 594:	39 f4       	brne	.+14     	; 0x5a4 <vfprintf+0x4c>
 596:	93 fd       	sbrc	r25, 3
 598:	85 91       	lpm	r24, Z+
 59a:	93 ff       	sbrs	r25, 3
 59c:	81 91       	ld	r24, Z+
 59e:	7f 01       	movw	r14, r30
 5a0:	85 32       	cpi	r24, 0x25	; 37
 5a2:	29 f4       	brne	.+10     	; 0x5ae <vfprintf+0x56>
 5a4:	b6 01       	movw	r22, r12
 5a6:	90 e0       	ldi	r25, 0x00	; 0
 5a8:	0e 94 a3 04 	call	0x946	; 0x946 <fputc>
 5ac:	e7 cf       	rjmp	.-50     	; 0x57c <vfprintf+0x24>
 5ae:	91 2c       	mov	r9, r1
 5b0:	21 2c       	mov	r2, r1
 5b2:	31 2c       	mov	r3, r1
 5b4:	ff e1       	ldi	r31, 0x1F	; 31
 5b6:	f3 15       	cp	r31, r3
 5b8:	d8 f0       	brcs	.+54     	; 0x5f0 <vfprintf+0x98>
 5ba:	8b 32       	cpi	r24, 0x2B	; 43
 5bc:	79 f0       	breq	.+30     	; 0x5dc <vfprintf+0x84>
 5be:	38 f4       	brcc	.+14     	; 0x5ce <vfprintf+0x76>
 5c0:	80 32       	cpi	r24, 0x20	; 32
 5c2:	79 f0       	breq	.+30     	; 0x5e2 <vfprintf+0x8a>
 5c4:	83 32       	cpi	r24, 0x23	; 35
 5c6:	a1 f4       	brne	.+40     	; 0x5f0 <vfprintf+0x98>
 5c8:	23 2d       	mov	r18, r3
 5ca:	20 61       	ori	r18, 0x10	; 16
 5cc:	1d c0       	rjmp	.+58     	; 0x608 <vfprintf+0xb0>
 5ce:	8d 32       	cpi	r24, 0x2D	; 45
 5d0:	61 f0       	breq	.+24     	; 0x5ea <vfprintf+0x92>
 5d2:	80 33       	cpi	r24, 0x30	; 48
 5d4:	69 f4       	brne	.+26     	; 0x5f0 <vfprintf+0x98>
 5d6:	23 2d       	mov	r18, r3
 5d8:	21 60       	ori	r18, 0x01	; 1
 5da:	16 c0       	rjmp	.+44     	; 0x608 <vfprintf+0xb0>
 5dc:	83 2d       	mov	r24, r3
 5de:	82 60       	ori	r24, 0x02	; 2
 5e0:	38 2e       	mov	r3, r24
 5e2:	e3 2d       	mov	r30, r3
 5e4:	e4 60       	ori	r30, 0x04	; 4
 5e6:	3e 2e       	mov	r3, r30
 5e8:	2a c0       	rjmp	.+84     	; 0x63e <vfprintf+0xe6>
 5ea:	f3 2d       	mov	r31, r3
 5ec:	f8 60       	ori	r31, 0x08	; 8
 5ee:	1d c0       	rjmp	.+58     	; 0x62a <vfprintf+0xd2>
 5f0:	37 fc       	sbrc	r3, 7
 5f2:	2d c0       	rjmp	.+90     	; 0x64e <vfprintf+0xf6>
 5f4:	20 ed       	ldi	r18, 0xD0	; 208
 5f6:	28 0f       	add	r18, r24
 5f8:	2a 30       	cpi	r18, 0x0A	; 10
 5fa:	40 f0       	brcs	.+16     	; 0x60c <vfprintf+0xb4>
 5fc:	8e 32       	cpi	r24, 0x2E	; 46
 5fe:	b9 f4       	brne	.+46     	; 0x62e <vfprintf+0xd6>
 600:	36 fc       	sbrc	r3, 6
 602:	81 c1       	rjmp	.+770    	; 0x906 <__stack+0x7>
 604:	23 2d       	mov	r18, r3
 606:	20 64       	ori	r18, 0x40	; 64
 608:	32 2e       	mov	r3, r18
 60a:	19 c0       	rjmp	.+50     	; 0x63e <vfprintf+0xe6>
 60c:	36 fe       	sbrs	r3, 6
 60e:	06 c0       	rjmp	.+12     	; 0x61c <vfprintf+0xc4>
 610:	8a e0       	ldi	r24, 0x0A	; 10
 612:	98 9e       	mul	r9, r24
 614:	20 0d       	add	r18, r0
 616:	11 24       	eor	r1, r1
 618:	92 2e       	mov	r9, r18
 61a:	11 c0       	rjmp	.+34     	; 0x63e <vfprintf+0xe6>
 61c:	ea e0       	ldi	r30, 0x0A	; 10
 61e:	2e 9e       	mul	r2, r30
 620:	20 0d       	add	r18, r0
 622:	11 24       	eor	r1, r1
 624:	22 2e       	mov	r2, r18
 626:	f3 2d       	mov	r31, r3
 628:	f0 62       	ori	r31, 0x20	; 32
 62a:	3f 2e       	mov	r3, r31
 62c:	08 c0       	rjmp	.+16     	; 0x63e <vfprintf+0xe6>
 62e:	8c 36       	cpi	r24, 0x6C	; 108
 630:	21 f4       	brne	.+8      	; 0x63a <vfprintf+0xe2>
 632:	83 2d       	mov	r24, r3
 634:	80 68       	ori	r24, 0x80	; 128
 636:	38 2e       	mov	r3, r24
 638:	02 c0       	rjmp	.+4      	; 0x63e <vfprintf+0xe6>
 63a:	88 36       	cpi	r24, 0x68	; 104
 63c:	41 f4       	brne	.+16     	; 0x64e <vfprintf+0xf6>
 63e:	f7 01       	movw	r30, r14
 640:	93 fd       	sbrc	r25, 3
 642:	85 91       	lpm	r24, Z+
 644:	93 ff       	sbrs	r25, 3
 646:	81 91       	ld	r24, Z+
 648:	7f 01       	movw	r14, r30
 64a:	81 11       	cpse	r24, r1
 64c:	b3 cf       	rjmp	.-154    	; 0x5b4 <vfprintf+0x5c>
 64e:	98 2f       	mov	r25, r24
 650:	9f 7d       	andi	r25, 0xDF	; 223
 652:	95 54       	subi	r25, 0x45	; 69
 654:	93 30       	cpi	r25, 0x03	; 3
 656:	28 f4       	brcc	.+10     	; 0x662 <vfprintf+0x10a>
 658:	0c 5f       	subi	r16, 0xFC	; 252
 65a:	1f 4f       	sbci	r17, 0xFF	; 255
 65c:	9f e3       	ldi	r25, 0x3F	; 63
 65e:	99 83       	std	Y+1, r25	; 0x01
 660:	0d c0       	rjmp	.+26     	; 0x67c <vfprintf+0x124>
 662:	83 36       	cpi	r24, 0x63	; 99
 664:	31 f0       	breq	.+12     	; 0x672 <vfprintf+0x11a>
 666:	83 37       	cpi	r24, 0x73	; 115
 668:	71 f0       	breq	.+28     	; 0x686 <vfprintf+0x12e>
 66a:	83 35       	cpi	r24, 0x53	; 83
 66c:	09 f0       	breq	.+2      	; 0x670 <vfprintf+0x118>
 66e:	59 c0       	rjmp	.+178    	; 0x722 <vfprintf+0x1ca>
 670:	21 c0       	rjmp	.+66     	; 0x6b4 <vfprintf+0x15c>
 672:	f8 01       	movw	r30, r16
 674:	80 81       	ld	r24, Z
 676:	89 83       	std	Y+1, r24	; 0x01
 678:	0e 5f       	subi	r16, 0xFE	; 254
 67a:	1f 4f       	sbci	r17, 0xFF	; 255
 67c:	88 24       	eor	r8, r8
 67e:	83 94       	inc	r8
 680:	91 2c       	mov	r9, r1
 682:	53 01       	movw	r10, r6
 684:	13 c0       	rjmp	.+38     	; 0x6ac <vfprintf+0x154>
 686:	28 01       	movw	r4, r16
 688:	f2 e0       	ldi	r31, 0x02	; 2
 68a:	4f 0e       	add	r4, r31
 68c:	51 1c       	adc	r5, r1
 68e:	f8 01       	movw	r30, r16
 690:	a0 80       	ld	r10, Z
 692:	b1 80       	ldd	r11, Z+1	; 0x01
 694:	36 fe       	sbrs	r3, 6
 696:	03 c0       	rjmp	.+6      	; 0x69e <vfprintf+0x146>
 698:	69 2d       	mov	r22, r9
 69a:	70 e0       	ldi	r23, 0x00	; 0
 69c:	02 c0       	rjmp	.+4      	; 0x6a2 <vfprintf+0x14a>
 69e:	6f ef       	ldi	r22, 0xFF	; 255
 6a0:	7f ef       	ldi	r23, 0xFF	; 255
 6a2:	c5 01       	movw	r24, r10
 6a4:	0e 94 98 04 	call	0x930	; 0x930 <strnlen>
 6a8:	4c 01       	movw	r8, r24
 6aa:	82 01       	movw	r16, r4
 6ac:	f3 2d       	mov	r31, r3
 6ae:	ff 77       	andi	r31, 0x7F	; 127
 6b0:	3f 2e       	mov	r3, r31
 6b2:	16 c0       	rjmp	.+44     	; 0x6e0 <vfprintf+0x188>
 6b4:	28 01       	movw	r4, r16
 6b6:	22 e0       	ldi	r18, 0x02	; 2
 6b8:	42 0e       	add	r4, r18
 6ba:	51 1c       	adc	r5, r1
 6bc:	f8 01       	movw	r30, r16
 6be:	a0 80       	ld	r10, Z
 6c0:	b1 80       	ldd	r11, Z+1	; 0x01
 6c2:	36 fe       	sbrs	r3, 6
 6c4:	03 c0       	rjmp	.+6      	; 0x6cc <vfprintf+0x174>
 6c6:	69 2d       	mov	r22, r9
 6c8:	70 e0       	ldi	r23, 0x00	; 0
 6ca:	02 c0       	rjmp	.+4      	; 0x6d0 <vfprintf+0x178>
 6cc:	6f ef       	ldi	r22, 0xFF	; 255
 6ce:	7f ef       	ldi	r23, 0xFF	; 255
 6d0:	c5 01       	movw	r24, r10
 6d2:	0e 94 8d 04 	call	0x91a	; 0x91a <strnlen_P>
 6d6:	4c 01       	movw	r8, r24
 6d8:	f3 2d       	mov	r31, r3
 6da:	f0 68       	ori	r31, 0x80	; 128
 6dc:	3f 2e       	mov	r3, r31
 6de:	82 01       	movw	r16, r4
 6e0:	33 fc       	sbrc	r3, 3
 6e2:	1b c0       	rjmp	.+54     	; 0x71a <vfprintf+0x1c2>
 6e4:	82 2d       	mov	r24, r2
 6e6:	90 e0       	ldi	r25, 0x00	; 0
 6e8:	88 16       	cp	r8, r24
 6ea:	99 06       	cpc	r9, r25
 6ec:	b0 f4       	brcc	.+44     	; 0x71a <vfprintf+0x1c2>
 6ee:	b6 01       	movw	r22, r12
 6f0:	80 e2       	ldi	r24, 0x20	; 32
 6f2:	90 e0       	ldi	r25, 0x00	; 0
 6f4:	0e 94 a3 04 	call	0x946	; 0x946 <fputc>
 6f8:	2a 94       	dec	r2
 6fa:	f4 cf       	rjmp	.-24     	; 0x6e4 <vfprintf+0x18c>
 6fc:	f5 01       	movw	r30, r10
 6fe:	37 fc       	sbrc	r3, 7
 700:	85 91       	lpm	r24, Z+
 702:	37 fe       	sbrs	r3, 7
 704:	81 91       	ld	r24, Z+
 706:	5f 01       	movw	r10, r30
 708:	b6 01       	movw	r22, r12
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	0e 94 a3 04 	call	0x946	; 0x946 <fputc>
 710:	21 10       	cpse	r2, r1
 712:	2a 94       	dec	r2
 714:	21 e0       	ldi	r18, 0x01	; 1
 716:	82 1a       	sub	r8, r18
 718:	91 08       	sbc	r9, r1
 71a:	81 14       	cp	r8, r1
 71c:	91 04       	cpc	r9, r1
 71e:	71 f7       	brne	.-36     	; 0x6fc <vfprintf+0x1a4>
 720:	e8 c0       	rjmp	.+464    	; 0x8f2 <vfprintf+0x39a>
 722:	84 36       	cpi	r24, 0x64	; 100
 724:	11 f0       	breq	.+4      	; 0x72a <vfprintf+0x1d2>
 726:	89 36       	cpi	r24, 0x69	; 105
 728:	41 f5       	brne	.+80     	; 0x77a <vfprintf+0x222>
 72a:	f8 01       	movw	r30, r16
 72c:	37 fe       	sbrs	r3, 7
 72e:	07 c0       	rjmp	.+14     	; 0x73e <vfprintf+0x1e6>
 730:	60 81       	ld	r22, Z
 732:	71 81       	ldd	r23, Z+1	; 0x01
 734:	82 81       	ldd	r24, Z+2	; 0x02
 736:	93 81       	ldd	r25, Z+3	; 0x03
 738:	0c 5f       	subi	r16, 0xFC	; 252
 73a:	1f 4f       	sbci	r17, 0xFF	; 255
 73c:	08 c0       	rjmp	.+16     	; 0x74e <vfprintf+0x1f6>
 73e:	60 81       	ld	r22, Z
 740:	71 81       	ldd	r23, Z+1	; 0x01
 742:	07 2e       	mov	r0, r23
 744:	00 0c       	add	r0, r0
 746:	88 0b       	sbc	r24, r24
 748:	99 0b       	sbc	r25, r25
 74a:	0e 5f       	subi	r16, 0xFE	; 254
 74c:	1f 4f       	sbci	r17, 0xFF	; 255
 74e:	f3 2d       	mov	r31, r3
 750:	ff 76       	andi	r31, 0x6F	; 111
 752:	3f 2e       	mov	r3, r31
 754:	97 ff       	sbrs	r25, 7
 756:	09 c0       	rjmp	.+18     	; 0x76a <vfprintf+0x212>
 758:	90 95       	com	r25
 75a:	80 95       	com	r24
 75c:	70 95       	com	r23
 75e:	61 95       	neg	r22
 760:	7f 4f       	sbci	r23, 0xFF	; 255
 762:	8f 4f       	sbci	r24, 0xFF	; 255
 764:	9f 4f       	sbci	r25, 0xFF	; 255
 766:	f0 68       	ori	r31, 0x80	; 128
 768:	3f 2e       	mov	r3, r31
 76a:	2a e0       	ldi	r18, 0x0A	; 10
 76c:	30 e0       	ldi	r19, 0x00	; 0
 76e:	a3 01       	movw	r20, r6
 770:	0e 94 df 04 	call	0x9be	; 0x9be <__ultoa_invert>
 774:	88 2e       	mov	r8, r24
 776:	86 18       	sub	r8, r6
 778:	45 c0       	rjmp	.+138    	; 0x804 <vfprintf+0x2ac>
 77a:	85 37       	cpi	r24, 0x75	; 117
 77c:	31 f4       	brne	.+12     	; 0x78a <vfprintf+0x232>
 77e:	23 2d       	mov	r18, r3
 780:	2f 7e       	andi	r18, 0xEF	; 239
 782:	b2 2e       	mov	r11, r18
 784:	2a e0       	ldi	r18, 0x0A	; 10
 786:	30 e0       	ldi	r19, 0x00	; 0
 788:	25 c0       	rjmp	.+74     	; 0x7d4 <vfprintf+0x27c>
 78a:	93 2d       	mov	r25, r3
 78c:	99 7f       	andi	r25, 0xF9	; 249
 78e:	b9 2e       	mov	r11, r25
 790:	8f 36       	cpi	r24, 0x6F	; 111
 792:	c1 f0       	breq	.+48     	; 0x7c4 <vfprintf+0x26c>
 794:	18 f4       	brcc	.+6      	; 0x79c <vfprintf+0x244>
 796:	88 35       	cpi	r24, 0x58	; 88
 798:	79 f0       	breq	.+30     	; 0x7b8 <vfprintf+0x260>
 79a:	b5 c0       	rjmp	.+362    	; 0x906 <__stack+0x7>
 79c:	80 37       	cpi	r24, 0x70	; 112
 79e:	19 f0       	breq	.+6      	; 0x7a6 <vfprintf+0x24e>
 7a0:	88 37       	cpi	r24, 0x78	; 120
 7a2:	21 f0       	breq	.+8      	; 0x7ac <vfprintf+0x254>
 7a4:	b0 c0       	rjmp	.+352    	; 0x906 <__stack+0x7>
 7a6:	e9 2f       	mov	r30, r25
 7a8:	e0 61       	ori	r30, 0x10	; 16
 7aa:	be 2e       	mov	r11, r30
 7ac:	b4 fe       	sbrs	r11, 4
 7ae:	0d c0       	rjmp	.+26     	; 0x7ca <vfprintf+0x272>
 7b0:	fb 2d       	mov	r31, r11
 7b2:	f4 60       	ori	r31, 0x04	; 4
 7b4:	bf 2e       	mov	r11, r31
 7b6:	09 c0       	rjmp	.+18     	; 0x7ca <vfprintf+0x272>
 7b8:	34 fe       	sbrs	r3, 4
 7ba:	0a c0       	rjmp	.+20     	; 0x7d0 <vfprintf+0x278>
 7bc:	29 2f       	mov	r18, r25
 7be:	26 60       	ori	r18, 0x06	; 6
 7c0:	b2 2e       	mov	r11, r18
 7c2:	06 c0       	rjmp	.+12     	; 0x7d0 <vfprintf+0x278>
 7c4:	28 e0       	ldi	r18, 0x08	; 8
 7c6:	30 e0       	ldi	r19, 0x00	; 0
 7c8:	05 c0       	rjmp	.+10     	; 0x7d4 <vfprintf+0x27c>
 7ca:	20 e1       	ldi	r18, 0x10	; 16
 7cc:	30 e0       	ldi	r19, 0x00	; 0
 7ce:	02 c0       	rjmp	.+4      	; 0x7d4 <vfprintf+0x27c>
 7d0:	20 e1       	ldi	r18, 0x10	; 16
 7d2:	32 e0       	ldi	r19, 0x02	; 2
 7d4:	f8 01       	movw	r30, r16
 7d6:	b7 fe       	sbrs	r11, 7
 7d8:	07 c0       	rjmp	.+14     	; 0x7e8 <vfprintf+0x290>
 7da:	60 81       	ld	r22, Z
 7dc:	71 81       	ldd	r23, Z+1	; 0x01
 7de:	82 81       	ldd	r24, Z+2	; 0x02
 7e0:	93 81       	ldd	r25, Z+3	; 0x03
 7e2:	0c 5f       	subi	r16, 0xFC	; 252
 7e4:	1f 4f       	sbci	r17, 0xFF	; 255
 7e6:	06 c0       	rjmp	.+12     	; 0x7f4 <vfprintf+0x29c>
 7e8:	60 81       	ld	r22, Z
 7ea:	71 81       	ldd	r23, Z+1	; 0x01
 7ec:	80 e0       	ldi	r24, 0x00	; 0
 7ee:	90 e0       	ldi	r25, 0x00	; 0
 7f0:	0e 5f       	subi	r16, 0xFE	; 254
 7f2:	1f 4f       	sbci	r17, 0xFF	; 255
 7f4:	a3 01       	movw	r20, r6
 7f6:	0e 94 df 04 	call	0x9be	; 0x9be <__ultoa_invert>
 7fa:	88 2e       	mov	r8, r24
 7fc:	86 18       	sub	r8, r6
 7fe:	fb 2d       	mov	r31, r11
 800:	ff 77       	andi	r31, 0x7F	; 127
 802:	3f 2e       	mov	r3, r31
 804:	36 fe       	sbrs	r3, 6
 806:	0d c0       	rjmp	.+26     	; 0x822 <vfprintf+0x2ca>
 808:	23 2d       	mov	r18, r3
 80a:	2e 7f       	andi	r18, 0xFE	; 254
 80c:	a2 2e       	mov	r10, r18
 80e:	89 14       	cp	r8, r9
 810:	58 f4       	brcc	.+22     	; 0x828 <vfprintf+0x2d0>
 812:	34 fe       	sbrs	r3, 4
 814:	0b c0       	rjmp	.+22     	; 0x82c <vfprintf+0x2d4>
 816:	32 fc       	sbrc	r3, 2
 818:	09 c0       	rjmp	.+18     	; 0x82c <vfprintf+0x2d4>
 81a:	83 2d       	mov	r24, r3
 81c:	8e 7e       	andi	r24, 0xEE	; 238
 81e:	a8 2e       	mov	r10, r24
 820:	05 c0       	rjmp	.+10     	; 0x82c <vfprintf+0x2d4>
 822:	b8 2c       	mov	r11, r8
 824:	a3 2c       	mov	r10, r3
 826:	03 c0       	rjmp	.+6      	; 0x82e <vfprintf+0x2d6>
 828:	b8 2c       	mov	r11, r8
 82a:	01 c0       	rjmp	.+2      	; 0x82e <vfprintf+0x2d6>
 82c:	b9 2c       	mov	r11, r9
 82e:	a4 fe       	sbrs	r10, 4
 830:	0f c0       	rjmp	.+30     	; 0x850 <vfprintf+0x2f8>
 832:	fe 01       	movw	r30, r28
 834:	e8 0d       	add	r30, r8
 836:	f1 1d       	adc	r31, r1
 838:	80 81       	ld	r24, Z
 83a:	80 33       	cpi	r24, 0x30	; 48
 83c:	21 f4       	brne	.+8      	; 0x846 <vfprintf+0x2ee>
 83e:	9a 2d       	mov	r25, r10
 840:	99 7e       	andi	r25, 0xE9	; 233
 842:	a9 2e       	mov	r10, r25
 844:	09 c0       	rjmp	.+18     	; 0x858 <vfprintf+0x300>
 846:	a2 fe       	sbrs	r10, 2
 848:	06 c0       	rjmp	.+12     	; 0x856 <vfprintf+0x2fe>
 84a:	b3 94       	inc	r11
 84c:	b3 94       	inc	r11
 84e:	04 c0       	rjmp	.+8      	; 0x858 <vfprintf+0x300>
 850:	8a 2d       	mov	r24, r10
 852:	86 78       	andi	r24, 0x86	; 134
 854:	09 f0       	breq	.+2      	; 0x858 <vfprintf+0x300>
 856:	b3 94       	inc	r11
 858:	a3 fc       	sbrc	r10, 3
 85a:	11 c0       	rjmp	.+34     	; 0x87e <vfprintf+0x326>
 85c:	a0 fe       	sbrs	r10, 0
 85e:	06 c0       	rjmp	.+12     	; 0x86c <vfprintf+0x314>
 860:	b2 14       	cp	r11, r2
 862:	88 f4       	brcc	.+34     	; 0x886 <vfprintf+0x32e>
 864:	28 0c       	add	r2, r8
 866:	92 2c       	mov	r9, r2
 868:	9b 18       	sub	r9, r11
 86a:	0e c0       	rjmp	.+28     	; 0x888 <vfprintf+0x330>
 86c:	b2 14       	cp	r11, r2
 86e:	60 f4       	brcc	.+24     	; 0x888 <vfprintf+0x330>
 870:	b6 01       	movw	r22, r12
 872:	80 e2       	ldi	r24, 0x20	; 32
 874:	90 e0       	ldi	r25, 0x00	; 0
 876:	0e 94 a3 04 	call	0x946	; 0x946 <fputc>
 87a:	b3 94       	inc	r11
 87c:	f7 cf       	rjmp	.-18     	; 0x86c <vfprintf+0x314>
 87e:	b2 14       	cp	r11, r2
 880:	18 f4       	brcc	.+6      	; 0x888 <vfprintf+0x330>
 882:	2b 18       	sub	r2, r11
 884:	02 c0       	rjmp	.+4      	; 0x88a <vfprintf+0x332>
 886:	98 2c       	mov	r9, r8
 888:	21 2c       	mov	r2, r1
 88a:	a4 fe       	sbrs	r10, 4
 88c:	10 c0       	rjmp	.+32     	; 0x8ae <vfprintf+0x356>
 88e:	b6 01       	movw	r22, r12
 890:	80 e3       	ldi	r24, 0x30	; 48
 892:	90 e0       	ldi	r25, 0x00	; 0
 894:	0e 94 a3 04 	call	0x946	; 0x946 <fputc>
 898:	a2 fe       	sbrs	r10, 2
 89a:	17 c0       	rjmp	.+46     	; 0x8ca <vfprintf+0x372>
 89c:	a1 fc       	sbrc	r10, 1
 89e:	03 c0       	rjmp	.+6      	; 0x8a6 <vfprintf+0x34e>
 8a0:	88 e7       	ldi	r24, 0x78	; 120
 8a2:	90 e0       	ldi	r25, 0x00	; 0
 8a4:	02 c0       	rjmp	.+4      	; 0x8aa <vfprintf+0x352>
 8a6:	88 e5       	ldi	r24, 0x58	; 88
 8a8:	90 e0       	ldi	r25, 0x00	; 0
 8aa:	b6 01       	movw	r22, r12
 8ac:	0c c0       	rjmp	.+24     	; 0x8c6 <vfprintf+0x36e>
 8ae:	8a 2d       	mov	r24, r10
 8b0:	86 78       	andi	r24, 0x86	; 134
 8b2:	59 f0       	breq	.+22     	; 0x8ca <vfprintf+0x372>
 8b4:	a1 fe       	sbrs	r10, 1
 8b6:	02 c0       	rjmp	.+4      	; 0x8bc <vfprintf+0x364>
 8b8:	8b e2       	ldi	r24, 0x2B	; 43
 8ba:	01 c0       	rjmp	.+2      	; 0x8be <vfprintf+0x366>
 8bc:	80 e2       	ldi	r24, 0x20	; 32
 8be:	a7 fc       	sbrc	r10, 7
 8c0:	8d e2       	ldi	r24, 0x2D	; 45
 8c2:	b6 01       	movw	r22, r12
 8c4:	90 e0       	ldi	r25, 0x00	; 0
 8c6:	0e 94 a3 04 	call	0x946	; 0x946 <fputc>
 8ca:	89 14       	cp	r8, r9
 8cc:	38 f4       	brcc	.+14     	; 0x8dc <vfprintf+0x384>
 8ce:	b6 01       	movw	r22, r12
 8d0:	80 e3       	ldi	r24, 0x30	; 48
 8d2:	90 e0       	ldi	r25, 0x00	; 0
 8d4:	0e 94 a3 04 	call	0x946	; 0x946 <fputc>
 8d8:	9a 94       	dec	r9
 8da:	f7 cf       	rjmp	.-18     	; 0x8ca <vfprintf+0x372>
 8dc:	8a 94       	dec	r8
 8de:	f3 01       	movw	r30, r6
 8e0:	e8 0d       	add	r30, r8
 8e2:	f1 1d       	adc	r31, r1
 8e4:	80 81       	ld	r24, Z
 8e6:	b6 01       	movw	r22, r12
 8e8:	90 e0       	ldi	r25, 0x00	; 0
 8ea:	0e 94 a3 04 	call	0x946	; 0x946 <fputc>
 8ee:	81 10       	cpse	r8, r1
 8f0:	f5 cf       	rjmp	.-22     	; 0x8dc <vfprintf+0x384>
 8f2:	22 20       	and	r2, r2
 8f4:	09 f4       	brne	.+2      	; 0x8f8 <vfprintf+0x3a0>
 8f6:	42 ce       	rjmp	.-892    	; 0x57c <vfprintf+0x24>
 8f8:	b6 01       	movw	r22, r12
 8fa:	80 e2       	ldi	r24, 0x20	; 32
 8fc:	90 e0       	ldi	r25, 0x00	; 0
 8fe:	0e 94 a3 04 	call	0x946	; 0x946 <fputc>
 902:	2a 94       	dec	r2
 904:	f6 cf       	rjmp	.-20     	; 0x8f2 <vfprintf+0x39a>
 906:	f6 01       	movw	r30, r12
 908:	86 81       	ldd	r24, Z+6	; 0x06
 90a:	97 81       	ldd	r25, Z+7	; 0x07
 90c:	02 c0       	rjmp	.+4      	; 0x912 <__stack+0x13>
 90e:	8f ef       	ldi	r24, 0xFF	; 255
 910:	9f ef       	ldi	r25, 0xFF	; 255
 912:	2b 96       	adiw	r28, 0x0b	; 11
 914:	e2 e1       	ldi	r30, 0x12	; 18
 916:	0c 94 59 05 	jmp	0xab2	; 0xab2 <__epilogue_restores__>

0000091a <strnlen_P>:
 91a:	fc 01       	movw	r30, r24
 91c:	05 90       	lpm	r0, Z+
 91e:	61 50       	subi	r22, 0x01	; 1
 920:	70 40       	sbci	r23, 0x00	; 0
 922:	01 10       	cpse	r0, r1
 924:	d8 f7       	brcc	.-10     	; 0x91c <strnlen_P+0x2>
 926:	80 95       	com	r24
 928:	90 95       	com	r25
 92a:	8e 0f       	add	r24, r30
 92c:	9f 1f       	adc	r25, r31
 92e:	08 95       	ret

00000930 <strnlen>:
 930:	fc 01       	movw	r30, r24
 932:	61 50       	subi	r22, 0x01	; 1
 934:	70 40       	sbci	r23, 0x00	; 0
 936:	01 90       	ld	r0, Z+
 938:	01 10       	cpse	r0, r1
 93a:	d8 f7       	brcc	.-10     	; 0x932 <strnlen+0x2>
 93c:	80 95       	com	r24
 93e:	90 95       	com	r25
 940:	8e 0f       	add	r24, r30
 942:	9f 1f       	adc	r25, r31
 944:	08 95       	ret

00000946 <fputc>:
 946:	0f 93       	push	r16
 948:	1f 93       	push	r17
 94a:	cf 93       	push	r28
 94c:	df 93       	push	r29
 94e:	fb 01       	movw	r30, r22
 950:	23 81       	ldd	r18, Z+3	; 0x03
 952:	21 fd       	sbrc	r18, 1
 954:	03 c0       	rjmp	.+6      	; 0x95c <fputc+0x16>
 956:	8f ef       	ldi	r24, 0xFF	; 255
 958:	9f ef       	ldi	r25, 0xFF	; 255
 95a:	2c c0       	rjmp	.+88     	; 0x9b4 <fputc+0x6e>
 95c:	22 ff       	sbrs	r18, 2
 95e:	16 c0       	rjmp	.+44     	; 0x98c <fputc+0x46>
 960:	46 81       	ldd	r20, Z+6	; 0x06
 962:	57 81       	ldd	r21, Z+7	; 0x07
 964:	24 81       	ldd	r18, Z+4	; 0x04
 966:	35 81       	ldd	r19, Z+5	; 0x05
 968:	42 17       	cp	r20, r18
 96a:	53 07       	cpc	r21, r19
 96c:	44 f4       	brge	.+16     	; 0x97e <fputc+0x38>
 96e:	a0 81       	ld	r26, Z
 970:	b1 81       	ldd	r27, Z+1	; 0x01
 972:	9d 01       	movw	r18, r26
 974:	2f 5f       	subi	r18, 0xFF	; 255
 976:	3f 4f       	sbci	r19, 0xFF	; 255
 978:	31 83       	std	Z+1, r19	; 0x01
 97a:	20 83       	st	Z, r18
 97c:	8c 93       	st	X, r24
 97e:	26 81       	ldd	r18, Z+6	; 0x06
 980:	37 81       	ldd	r19, Z+7	; 0x07
 982:	2f 5f       	subi	r18, 0xFF	; 255
 984:	3f 4f       	sbci	r19, 0xFF	; 255
 986:	37 83       	std	Z+7, r19	; 0x07
 988:	26 83       	std	Z+6, r18	; 0x06
 98a:	14 c0       	rjmp	.+40     	; 0x9b4 <fputc+0x6e>
 98c:	8b 01       	movw	r16, r22
 98e:	ec 01       	movw	r28, r24
 990:	fb 01       	movw	r30, r22
 992:	00 84       	ldd	r0, Z+8	; 0x08
 994:	f1 85       	ldd	r31, Z+9	; 0x09
 996:	e0 2d       	mov	r30, r0
 998:	09 95       	icall
 99a:	89 2b       	or	r24, r25
 99c:	e1 f6       	brne	.-72     	; 0x956 <fputc+0x10>
 99e:	d8 01       	movw	r26, r16
 9a0:	16 96       	adiw	r26, 0x06	; 6
 9a2:	8d 91       	ld	r24, X+
 9a4:	9c 91       	ld	r25, X
 9a6:	17 97       	sbiw	r26, 0x07	; 7
 9a8:	01 96       	adiw	r24, 0x01	; 1
 9aa:	17 96       	adiw	r26, 0x07	; 7
 9ac:	9c 93       	st	X, r25
 9ae:	8e 93       	st	-X, r24
 9b0:	16 97       	sbiw	r26, 0x06	; 6
 9b2:	ce 01       	movw	r24, r28
 9b4:	df 91       	pop	r29
 9b6:	cf 91       	pop	r28
 9b8:	1f 91       	pop	r17
 9ba:	0f 91       	pop	r16
 9bc:	08 95       	ret

000009be <__ultoa_invert>:
 9be:	fa 01       	movw	r30, r20
 9c0:	aa 27       	eor	r26, r26
 9c2:	28 30       	cpi	r18, 0x08	; 8
 9c4:	51 f1       	breq	.+84     	; 0xa1a <__ultoa_invert+0x5c>
 9c6:	20 31       	cpi	r18, 0x10	; 16
 9c8:	81 f1       	breq	.+96     	; 0xa2a <__ultoa_invert+0x6c>
 9ca:	e8 94       	clt
 9cc:	6f 93       	push	r22
 9ce:	6e 7f       	andi	r22, 0xFE	; 254
 9d0:	6e 5f       	subi	r22, 0xFE	; 254
 9d2:	7f 4f       	sbci	r23, 0xFF	; 255
 9d4:	8f 4f       	sbci	r24, 0xFF	; 255
 9d6:	9f 4f       	sbci	r25, 0xFF	; 255
 9d8:	af 4f       	sbci	r26, 0xFF	; 255
 9da:	b1 e0       	ldi	r27, 0x01	; 1
 9dc:	3e d0       	rcall	.+124    	; 0xa5a <__ultoa_invert+0x9c>
 9de:	b4 e0       	ldi	r27, 0x04	; 4
 9e0:	3c d0       	rcall	.+120    	; 0xa5a <__ultoa_invert+0x9c>
 9e2:	67 0f       	add	r22, r23
 9e4:	78 1f       	adc	r23, r24
 9e6:	89 1f       	adc	r24, r25
 9e8:	9a 1f       	adc	r25, r26
 9ea:	a1 1d       	adc	r26, r1
 9ec:	68 0f       	add	r22, r24
 9ee:	79 1f       	adc	r23, r25
 9f0:	8a 1f       	adc	r24, r26
 9f2:	91 1d       	adc	r25, r1
 9f4:	a1 1d       	adc	r26, r1
 9f6:	6a 0f       	add	r22, r26
 9f8:	71 1d       	adc	r23, r1
 9fa:	81 1d       	adc	r24, r1
 9fc:	91 1d       	adc	r25, r1
 9fe:	a1 1d       	adc	r26, r1
 a00:	20 d0       	rcall	.+64     	; 0xa42 <__ultoa_invert+0x84>
 a02:	09 f4       	brne	.+2      	; 0xa06 <__ultoa_invert+0x48>
 a04:	68 94       	set
 a06:	3f 91       	pop	r19
 a08:	2a e0       	ldi	r18, 0x0A	; 10
 a0a:	26 9f       	mul	r18, r22
 a0c:	11 24       	eor	r1, r1
 a0e:	30 19       	sub	r19, r0
 a10:	30 5d       	subi	r19, 0xD0	; 208
 a12:	31 93       	st	Z+, r19
 a14:	de f6       	brtc	.-74     	; 0x9cc <__ultoa_invert+0xe>
 a16:	cf 01       	movw	r24, r30
 a18:	08 95       	ret
 a1a:	46 2f       	mov	r20, r22
 a1c:	47 70       	andi	r20, 0x07	; 7
 a1e:	40 5d       	subi	r20, 0xD0	; 208
 a20:	41 93       	st	Z+, r20
 a22:	b3 e0       	ldi	r27, 0x03	; 3
 a24:	0f d0       	rcall	.+30     	; 0xa44 <__ultoa_invert+0x86>
 a26:	c9 f7       	brne	.-14     	; 0xa1a <__ultoa_invert+0x5c>
 a28:	f6 cf       	rjmp	.-20     	; 0xa16 <__ultoa_invert+0x58>
 a2a:	46 2f       	mov	r20, r22
 a2c:	4f 70       	andi	r20, 0x0F	; 15
 a2e:	40 5d       	subi	r20, 0xD0	; 208
 a30:	4a 33       	cpi	r20, 0x3A	; 58
 a32:	18 f0       	brcs	.+6      	; 0xa3a <__ultoa_invert+0x7c>
 a34:	49 5d       	subi	r20, 0xD9	; 217
 a36:	31 fd       	sbrc	r19, 1
 a38:	40 52       	subi	r20, 0x20	; 32
 a3a:	41 93       	st	Z+, r20
 a3c:	02 d0       	rcall	.+4      	; 0xa42 <__ultoa_invert+0x84>
 a3e:	a9 f7       	brne	.-22     	; 0xa2a <__ultoa_invert+0x6c>
 a40:	ea cf       	rjmp	.-44     	; 0xa16 <__ultoa_invert+0x58>
 a42:	b4 e0       	ldi	r27, 0x04	; 4
 a44:	a6 95       	lsr	r26
 a46:	97 95       	ror	r25
 a48:	87 95       	ror	r24
 a4a:	77 95       	ror	r23
 a4c:	67 95       	ror	r22
 a4e:	ba 95       	dec	r27
 a50:	c9 f7       	brne	.-14     	; 0xa44 <__ultoa_invert+0x86>
 a52:	00 97       	sbiw	r24, 0x00	; 0
 a54:	61 05       	cpc	r22, r1
 a56:	71 05       	cpc	r23, r1
 a58:	08 95       	ret
 a5a:	9b 01       	movw	r18, r22
 a5c:	ac 01       	movw	r20, r24
 a5e:	0a 2e       	mov	r0, r26
 a60:	06 94       	lsr	r0
 a62:	57 95       	ror	r21
 a64:	47 95       	ror	r20
 a66:	37 95       	ror	r19
 a68:	27 95       	ror	r18
 a6a:	ba 95       	dec	r27
 a6c:	c9 f7       	brne	.-14     	; 0xa60 <__ultoa_invert+0xa2>
 a6e:	62 0f       	add	r22, r18
 a70:	73 1f       	adc	r23, r19
 a72:	84 1f       	adc	r24, r20
 a74:	95 1f       	adc	r25, r21
 a76:	a0 1d       	adc	r26, r0
 a78:	08 95       	ret

00000a7a <__prologue_saves__>:
 a7a:	2f 92       	push	r2
 a7c:	3f 92       	push	r3
 a7e:	4f 92       	push	r4
 a80:	5f 92       	push	r5
 a82:	6f 92       	push	r6
 a84:	7f 92       	push	r7
 a86:	8f 92       	push	r8
 a88:	9f 92       	push	r9
 a8a:	af 92       	push	r10
 a8c:	bf 92       	push	r11
 a8e:	cf 92       	push	r12
 a90:	df 92       	push	r13
 a92:	ef 92       	push	r14
 a94:	ff 92       	push	r15
 a96:	0f 93       	push	r16
 a98:	1f 93       	push	r17
 a9a:	cf 93       	push	r28
 a9c:	df 93       	push	r29
 a9e:	cd b7       	in	r28, 0x3d	; 61
 aa0:	de b7       	in	r29, 0x3e	; 62
 aa2:	ca 1b       	sub	r28, r26
 aa4:	db 0b       	sbc	r29, r27
 aa6:	0f b6       	in	r0, 0x3f	; 63
 aa8:	f8 94       	cli
 aaa:	de bf       	out	0x3e, r29	; 62
 aac:	0f be       	out	0x3f, r0	; 63
 aae:	cd bf       	out	0x3d, r28	; 61
 ab0:	09 94       	ijmp

00000ab2 <__epilogue_restores__>:
 ab2:	2a 88       	ldd	r2, Y+18	; 0x12
 ab4:	39 88       	ldd	r3, Y+17	; 0x11
 ab6:	48 88       	ldd	r4, Y+16	; 0x10
 ab8:	5f 84       	ldd	r5, Y+15	; 0x0f
 aba:	6e 84       	ldd	r6, Y+14	; 0x0e
 abc:	7d 84       	ldd	r7, Y+13	; 0x0d
 abe:	8c 84       	ldd	r8, Y+12	; 0x0c
 ac0:	9b 84       	ldd	r9, Y+11	; 0x0b
 ac2:	aa 84       	ldd	r10, Y+10	; 0x0a
 ac4:	b9 84       	ldd	r11, Y+9	; 0x09
 ac6:	c8 84       	ldd	r12, Y+8	; 0x08
 ac8:	df 80       	ldd	r13, Y+7	; 0x07
 aca:	ee 80       	ldd	r14, Y+6	; 0x06
 acc:	fd 80       	ldd	r15, Y+5	; 0x05
 ace:	0c 81       	ldd	r16, Y+4	; 0x04
 ad0:	1b 81       	ldd	r17, Y+3	; 0x03
 ad2:	aa 81       	ldd	r26, Y+2	; 0x02
 ad4:	b9 81       	ldd	r27, Y+1	; 0x01
 ad6:	ce 0f       	add	r28, r30
 ad8:	d1 1d       	adc	r29, r1
 ada:	0f b6       	in	r0, 0x3f	; 63
 adc:	f8 94       	cli
 ade:	de bf       	out	0x3e, r29	; 62
 ae0:	0f be       	out	0x3f, r0	; 63
 ae2:	cd bf       	out	0x3d, r28	; 61
 ae4:	ed 01       	movw	r28, r26
 ae6:	08 95       	ret

00000ae8 <_exit>:
 ae8:	f8 94       	cli

00000aea <__stop_program>:
 aea:	ff cf       	rjmp	.-2      	; 0xaea <__stop_program>
